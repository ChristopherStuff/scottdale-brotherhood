const Discord = require('discord.js');
const fs = require("fs");

function isInteger(n) {
    return n === +n && n === (n|0);
}

function isNumeric(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
}

function error_mysql(error, message){
    console.error(error);
    message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`).then(msg => msg.delete(20000));
    const embed = new Discord.RichEmbed();
    embed.setDescription(`**${message.member}, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ—Å—Ç–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –≤ –Ω–∞—à–µ–º [—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ](https://robo-hamster.ru/index.php?forums/%D0%A2%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB.5/). –ö–æ–¥ –æ—à–∏–±–∫–∏: #752**`);
    message.member.send(embed);
    return message.delete();
}

function endsWithAny(suffixes, string) {
    return suffixes.some(function (suffix) {
        return string.endsWith(suffix);
    });
}

function time(s) {
    let ms = s % 1000;
    s = (s - ms) / 1000;
    let secs = s % 60;
    s = (s - secs) / 60;
    let mins = s % 60;
    let hrs = (s - mins) / 60;
    let output = '';

    if (hrs != 0){
        if (hrs.toString().endsWith('1') && !hrs.toString().endsWith('11')){
            output += hrs + ' —á–∞—Å ';
        }else if (endsWithAny(['2', '3', '4'], hrs.toString()) && !endsWithAny(['12', '13', '14'], hrs.toString())){
            output += hrs + ' —á–∞—Å–∞ ';
        }else{
            output += hrs + ' —á–∞—Å–æ–≤ ';
        }
    }
    if (mins != 0){
        if (mins.toString().endsWith('1') && !mins.toString().endsWith('11')){
            output += mins + ' –º–∏–Ω—É—Ç–∞ ';
        }else if (endsWithAny(['2', '3', '4'], mins.toString()) && !endsWithAny(['12', '13', '14'], mins.toString())){
            output += mins + ' –º–∏–Ω—É—Ç—ã ';
        }else{
            output += mins + ' –º–∏–Ω—É—Ç ';
        }
    }
    if (secs != 0){
        if (secs.toString().endsWith('1') && !secs.toString().endsWith('11')){
            output += secs + ' —Å–µ–∫—É–Ω–¥–∞ ';
        }else if (endsWithAny(['2', '3', '4'], secs.toString()) && !endsWithAny(['12', '13', '14'], secs.toString())){
            output += secs + ' —Å–µ–∫—É–Ω–¥—ã ';
        }else{
            output += secs + ' —Å–µ–∫—É–Ω–¥ ';
        }
    }
    if (ms != 0){
        output += ms + ' –º–∏–ª–∏—Å–µ–∫—É–Ω–¥';
    }
    return output;
}

function uses(message, command, uses_args, settings_args){
    const args = message.content.slice(`${command}`).split(/ +/);
    if (+args.length - 1 != uses_args.length){
        message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\`**`).then(msg => msg.delete(12000));
        message.delete();
        return true;
    }
    for (let i = 0; i <= settings_args.length; i++){
        if (settings_args[i] == 'number'){
            if (!isNumeric(args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'integer'){
            if (!isNumeric(args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
            if (!isInteger(+args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —Ü–µ–ª–æ–µ.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'mention'){
            let user = message.guild.member(message.mentions.users.first());
            if (!user){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'mention_user'){
            let user = message.guild.member(message.mentions.users.first());
            if (!user){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }else if (user.id == message.author.id){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –Ω–∞ —Å–µ–±—è –Ω–µ–ª—å–∑—è!\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'plus_number'){
            if (!isNumeric(args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
            if (args[+i + 1] <= 0){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'plus_number_integer'){
            if (!isNumeric(args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
            if (!isInteger(+args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —Ü–µ–ª–æ–µ.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
            if (args[+i + 1] <= 0){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'status'){
            if (!isNumeric(args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
            if (args[+i + 1] != 0 && args[+i + 1] != 1){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–ª–∏ '0', –∏–ª–∏ '1'.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }
    }
    return false;
}

function mysql_load(message, mysql_cooldown){
    if (mysql_cooldown.has(message.author.id)){
        message.reply(`**\`–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã.\`**`).then(msg => msg.delete(3000));
        message.delete();
        return false;
    }
    mysql_cooldown.add(message.author.id);
    setTimeout(() => {
        if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
    }, 4000);
    return true;
}

exports.run = async (bot, message, ds_cooldown, connection, mysql_cooldown, send_action) => {
    
    if (!message) return
    if (!message.member) return
    if (message.author.bot) return
    if (!message.member.roles) return
    if (!message.member.roles.some(r => r.name == '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π üîê')) return

    if (!ds_cooldown.has(message.author.id)){
        ds_cooldown.add(message.author.id);
        setTimeout(() => {
            if (ds_cooldown.has(message.author.id)) ds_cooldown.delete(message.author.id);
        }, 180000);
        connection.query(`SELECT \`id\`, \`server\` \`user\`, \`money\` FROM \`profiles\` WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`, async (error, result, packets) => {
            if (error) return console.error(error);
            if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
            if (result.length == 0){
                connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${message.guild.id}', '${message.author.id}', '0.5')`);
            }else{
                connection.query(`UPDATE \`profiles\` SET money = money + 0.5 WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`);
            }
        });
    }

    // Profile actions
    if (message.content.startsWith('/setstat')){
        if (!message.member.hasPermission("ADMINISTRATOR")) return
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/setstat', ['serverid', 'userid', 'money'], ['number', 'number', 'number'])) return
        const args = message.content.slice(`/setstat`).split(/ +/);
        if (args[1] != message.guild.id) return
        connection.query(`SELECT \`id\`, \`server\` \`user\`, \`money\` FROM \`profiles\` WHERE \`user\` = '${args[2]}' AND \`server\` = '${args[1]}'`, async (error, result, packets) => {
            if (error) return console.error(error);
            if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
            if (result.length == 0){
                connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${args[1]}', '${args[2]}', '${args[3]}')`);
                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –¥–æ–±–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${args[2]} ${args[3]} dp. (MONEY: ${args[3]})`);
            }else{
                connection.query(`UPDATE \`profiles\` SET money = money + ${args[3]} WHERE \`user\` = '${args[2]}' AND \`server\` = '${args[1]}'`);
                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –¥–æ–±–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${args[2]} ${args[3]} dp. (MONEY: ${+result[0].money + +args[3]})`);
            }
            await message.reply(`**–¥–æ–±–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <@${args[2]}> ${args[3]} ‚ÇØ**`);
            return message.delete();
        });
    }

    if (message.content.startsWith('/pay')){
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/pay', ['user', '—Å—É–º–º–∞'], ['mention_user', 'plus_number'])) return
        const args = message.content.slice(`/pay`).split(/ +/);
        let user = message.guild.member(message.mentions.users.first());
        if (args[2] < 0.01){
            await message.reply(`\`–Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –º–µ–Ω–µ–µ 0.01 dp! –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /pay [user] [—Å—É–º–º–∞]\``).then(msg => msg.delete(12000));
            return message.delete();
        }
        connection.query(`SELECT * FROM \`profiles\` WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`, async (error, result, packets) => {
            if (error) return console.error(error);
            if (result.length > 1){
                await message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`);
                const embed = new Discord.RichEmbed();
                embed.setDescription(`**${message.member}, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ—Å—Ç–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –≤ –Ω–∞—à–µ–º [—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ](https://robo-hamster.ru/index.php?forums/%D0%A2%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB.5/). –ö–æ–¥ –æ—à–∏–±–∫–∏: #1**`);
                message.member.send(embed);
                return message.delete();
            }else if (result.length < 1){
                await message.reply(`**\`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–≤–µ—Ä–µ—à–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–∏.\`**`);
                return message.delete();
            }
            if (result[0].money - args[2] < 0){
                await message.reply(`**\`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–≤–µ—Ä–µ—à–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–∏.\`**`);
                return message.delete();
            }
            connection.query(`SELECT * FROM \`profiles\` WHERE \`user\` = '${user.id}' AND \`server\` = '${message.guild.id}'`, async (error, answer, packets) => {
                if (error) return console.error(error);
                if (answer.length > 1){
                    await message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`);
                    const embed = new Discord.RichEmbed();
                    embed.setDescription(`**${message.member}, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ—Å—Ç–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –≤ –Ω–∞—à–µ–º [—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ](https://robo-hamster.ru/index.php?forums/%D0%A2%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB.5/). –ö–æ–¥ –æ—à–∏–±–∫–∏: #2**`);
                    message.member.send(embed);
                    return message.delete();
                }
                if (answer.length != 1){
                    connection.query(`UPDATE \`profiles\` SET money = money - ${+args[2]} WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`);
                    connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${message.guild.id}', '${user.id}', '${+args[2]}')`);
                    send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø–µ—Ä–µ–≤–µ–ª ${+args[2]} dp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.displayName || user.user.tag} (${user.id}) (${+result[0].money - +args[2]}-${+args[2]})`);
                    send_action(message.guild.id, `${user.displayName || user.user.tag} (${user.id}) –ø–æ–ª—É—á–∏–ª –æ—Ç ${message.member.displayName || message.author.tag} (${message.author.id}) | ${+args[2]} dp (0-${+answer[0].money + +args[2]})`);
                    await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ ${args[2]} dp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\` ${user}**`);
                    return message.delete();
                }else{
                    connection.query(`UPDATE \`profiles\` SET money = money - ${+args[2]} WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`);
                    connection.query(`UPDATE \`profiles\` SET money = money + ${+args[2]} WHERE \`user\` = '${user.id}' AND \`server\` = '${message.guild.id}'`);
                    send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø–µ—Ä–µ–≤–µ–ª ${+args[2]} dp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.displayName || user.user.tag} (${user.id}) (${+result[0].money - +args[2]}-${+answer[0].money + +args[2]})`);
                    send_action(message.guild.id, `${user.displayName || message.author.tag} (${user.id}) –ø–æ–ª—É—á–∏–ª –æ—Ç ${message.member.displayName || message.author.tag} (${message.author.id}) | ${+args[2]} dp (${+answer[0].money}-${+answer[0].money + +args[2]})`);
                    await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ ${args[2]} dp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\` ${user}**`);
                    return message.delete();
                }
            });
        });
    }

    if (message.content.startsWith('/balance')){
        if (!mysql_load(message, mysql_cooldown)) return
        let user = message.guild.member(message.mentions.users.first());
        if (!user){
            connection.query(`SELECT * FROM \`profiles\` WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`, async (error, result, packets) => {
                if (error) return console.error(error);
                if (result.length > 1){
                    await message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`);
                    const embed = new Discord.RichEmbed();
                    embed.setDescription(`**${message.member}, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ—Å—Ç–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –≤ –Ω–∞—à–µ–º [—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ](https://robo-hamster.ru/index.php?forums/%D0%A2%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB.5/). –ö–æ–¥ –æ—à–∏–±–∫–∏: #3**`);
                    await message.member.send(embed);
                    return message.delete();
                }
                if (result.length == 0){
                    send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª —Å–≤–æ–π –±–∞–ª–∞–Ω—Å (MONEY: 0)`);
                    await message.reply(`**–≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 0 ‚ÇØ**`);
                    return message.delete();
                }else{
                    send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª —Å–≤–æ–π –±–∞–ª–∞–Ω—Å (MONEY: ${result[0].money})`);
                    await message.reply(`**–≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${result[0].money} ‚ÇØ**`);
                    return message.delete();
                }
            });
        }else{
            if (!message.member.hasPermission("MANAGE_ROLES")){
                await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.\`**`).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`SELECT * FROM \`profiles\` WHERE \`user\` = '${user.id}' AND \`server\` = '${message.guild.id}'`, async (error, result, packets) => {
                if (error) return console.error(error);
                if (result.length > 1){
                    await message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`);
                    const embed = new Discord.RichEmbed();
                    embed.setDescription(`**${message.member}, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ—Å—Ç–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –≤ –Ω–∞—à–µ–º [—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ](https://robo-hamster.ru/index.php?forums/%D0%A2%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB.5/). –ö–æ–¥ –æ—à–∏–±–∫–∏: #4**`);
                    await message.member.send(embed);
                    return message.delete();
                }
                if (result.length == 0){
                    send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.displayName || user.user.tag} (${user.id}) (MONEY: 0)`);
                    await message.reply(`**–±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 0 ‚ÇØ**`);
                    return message.delete();
                }else{
                    send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.displayName || user.user.tag} (${user.id}) (MONEY: ${result[0].money})`);
                    await message.reply(`**–±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${result[0].money} ‚ÇØ**`);
                    return message.delete();
                }
            });
        }
    }

    if (message.content.startsWith('/buy')){
        if (!mysql_load(message, mysql_cooldown)) return
        const args = message.content.slice(`/buy`).split(/ +/);
        if (!args[1]){
            await message.reply('–≤–≤–µ–¥–∏—Ç–µ —Ö–æ—Ç—å —á—Ç–æ-—Ç–æ').then(msg => msg.delete(12000));
            return message.delete();
        }
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`name\` = '${args.slice(1).join(' ')}'`, async (error, shop) => {
            if (error) return error_mysql(error, message);
            if (shop.length == 0){
                await message.reply('**\`–¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!\`**').then(msg => msg.delete(7000));
                return message.delete();
            }else if (shop.length > 1){
                await message.reply('**\`–æ—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ Discord Master\'—É. –ö–æ–¥ –æ—à–∏–±–∫–∏: #759\`**').then(msg => msg.delete(7000));
                return message.delete();
            }else{
                if (shop[0].status == false){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è –∫—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç, —Ç–∞–∫ –∫–∞–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ!\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                if (shop[0].amount <= 0){
                    await message.reply(`**\`–≤ –º–∞–≥–∞–∑–∏–Ω–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤!\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                    if (error) return error_mysql(error, message);
                    if (profile.length > 1) return error_mysql(error, message);
                    if (profile.length == 1){
                        if (profile[0].money < shop[0].cost){
                            await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        let state_code = eval('(function() {' + shop[0].code + '}())');
                        if (state_code == 1){
                            connection.query(`UPDATE \`buy_dashboard\` SET money = money + ${shop[0].cost} WHERE \`id\` = '${shop[0].id}'`);
                            connection.query(`UPDATE \`profiles\` SET money = money - ${shop[0].cost} WHERE \`id\` = '${profile[0].id}'`);
                            connection.query(`UPDATE \`buy_dashboard\` SET amount = amount - 1 WHERE \`id\` = '${shop[0].id}'`);
                        }else{
                            await message.reply(`**\`–æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ: ${state_code}\`**`).then(msg => msg.delete(20000));
                            return message.delete();
                        }
                    }else{
                        await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!\`**`).then(msg => msg.delete(10000));
                        return message.delete();
                    }
                });
            }
        });
    }

    // –†–∞–±–æ—Ç–∞ —Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è–º–∏

    if (message.content.startsWith('/storage_status')){
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/storage_status', ['—Å–æ—Å—Ç–æ—è–Ω–∏–µ (1/0)'], ['none'])) return
        const args = message.content.slice(`/storage_status`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                if (uses(message, '/storage_status', ['—Å–æ—Å—Ç–æ—è–Ω–∏–µ (1/0)'], ['status'])) return
                if (storage[0].money < storage[0].nalog){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`storage\` SET status = '${args[1]}' WHERE \`id\` = '${storage[0].id}'`);
                await message.reply(`**\`—Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name} –Ω–∞ ${args[1]}`);
                return message.delete();
            }else{
                if (uses(message, '/storage_status', ['–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', '—Å–æ—Å—Ç–æ—è–Ω–∏–µ (1/0)'], ['number', 'status'])) return
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].money < storage[0].nalog){
                            await message.reply(`**\`–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(12000));
                            return message.delete();
                        }
                        connection.query(`UPDATE \`storage\` SET status = '${args[2]}' WHERE \`id\` = '${storage[0].id}'`);
                        await message.reply(`**\`—Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name} –Ω–∞ ${args[2]}`);
                        return message.delete();
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content.startsWith('/storage_description')){
        if (!mysql_load(message, mysql_cooldown)) return
        const args = message.content.slice(`/storage_description`).split(/ +/);
        if (!args[1]){
            await message.reply('**\`–≤–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ-—Ç–æ!\`**').then(msg => msg.delete(7000));
            return message.delete();
        }
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                if (storage[0].status == false){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                const description = args.slice(1).join(' ');
                if (description.length > 500){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ–ª—å—à–µ 500 —Å–∏–º–≤–æ–ª–æ–≤!\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`storage\` SET description = '${description}' WHERE \`id\` = '${storage[0].id}'`);
                await message.reply(`**\`–æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name} –Ω–∞ ${description}`);
                return message.delete();
            }else{
                if (!isNumeric(args[1])){
                    await message.reply(`**\`—É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: /storage_description [–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ] [–æ–ø–∏—Å–∞–Ω–∏–µ]\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].status == false){
                            await message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        const description = args.slice(2).join(' ');
                        if (description.length > 500){
                            await message.reply(`**\`–Ω–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ–ª—å—à–µ 500 —Å–∏–º–≤–æ–ª–æ–≤!\`**`).then(msg => msg.delete(12000));
                            return message.delete();
                        }
                        connection.query(`UPDATE \`storage\` SET description = '${description}' WHERE \`id\` = '${storage[0].id}'`);
                        await message.reply(`**\`–æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name} –Ω–∞ ${description}`);
                        return message.delete();
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content.startsWith('/storage_up')){
        if (!mysql_load(message, mysql_cooldown)) return
        const args = message.content.slice(`/storage_up`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                if (uses(message, '/storage_up', [], [])) return
                if (storage[0].status == false){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                let need = Number((storage[0].level * storage[0].min_cost * 30)).toFixed(2);
                if (storage[0].money < need){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`storage\` SET money = money - ${need} WHERE \`id\` = '${storage[0].id}'`);
                connection.query(`UPDATE \`storage\` SET level = level + 1 WHERE \`id\` = '${storage[0].id}'`)
                await message.reply(`**\`—É—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –±—ã–ª —É–≤–µ–ª–∏—á–µ–Ω!\`**`).then(msg => msg.delete(10000));
                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø–æ–≤—ã—Å–∏–ª —É—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name} –¥–æ ${+storage[0].level + 1}`);
                return message.delete();
            }else{
                if (uses(message, '/storage_status', ['–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ'], ['number'])) return
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].status == false){
                            await message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        let need = Number((storage[0].level * storage[0].min_cost * 30)).toFixed(2);
                        if (storage[0].money < need){
                            await message.reply(`**\`–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(12000));
                            return message.delete();
                        }
                        connection.query(`UPDATE \`storage\` SET money = money - ${need} WHERE \`id\` = '${storage[0].id}'`);
                        connection.query(`UPDATE \`storage\` SET level = level + 1 WHERE \`id\` = '${storage[0].id}'`)
                        await message.reply(`**\`—É—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –±—ã–ª —É–≤–µ–ª–∏—á–µ–Ω!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø–æ–≤—ã—Å–∏–ª —É—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name} –¥–æ ${+storage[0].level + 1}`);
                        return message.delete();
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content.startsWith('/storage_cost')){
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/storage_cost', ['—Å—É–º–º–∞'], ['none'])) return
        const args = message.content.slice(`/storage_cost`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                args[1] = Number((args[1])).toFixed(2);
                if (uses(message, '/storage_cost', ['—Å—É–º–º–∞'], ['plus_number'])) return
                if (storage[0].status == false){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                if (args[1] < storage[0].min_cost){
                    await message.reply(`**\`—Ä–∞–∑—Ä–µ—à–µ–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å—É–º–º—É –æ—Ç ${storage[0].min_cost} discord points!\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`storage\` SET cost = '${args[1]}' WHERE \`id\` = '${storage[0].id}'`);
                await message.reply(`**\`—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–∞ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!\`**`).then(msg => msg.delete(10000));
                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ c ${storage[0].cost} –Ω–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name}`);
                return message.delete();
            }else{
                args[2] = Number((args[2])).toFixed(2);
                if (uses(message, '/storage_cost', ['–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', '—Å—É–º–º–∞'], ['number', 'plus_number'])) return
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].status == false){
                            await message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        if (args[2] < storage[0].min_cost){
                            await message.reply(`**\`—Ä–∞–∑—Ä–µ—à–µ–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å—É–º–º—É –æ—Ç ${storage[0].min_cost} discord points!\`**`).then(msg => msg.delete(12000));
                            return message.delete();    
                        }
                        connection.query(`UPDATE \`storage\` SET cost = '${args[2]}' WHERE \`id\` = '${storage[0].id}'`);
                        await message.reply(`**\`—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–∞ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ c ${storage[0].cost} –Ω–∞ ${args[2]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name}`);
                        return message.delete();
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content.startsWith('/storage_add')){
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/storage_add', ['—Å—É–º–º–∞'], ['none'])) return
        const args = message.content.slice(`/storage_add`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                args[1] = Number((args[1])).toFixed(2);
                if (uses(message, '/storage_add', ['—Å—É–º–º–∞'], ['plus_number'])) return
                connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                    if (error) return error_mysql(error, message);
                    if (profile.length > 1) return error_mysql(error, message);
                    if (profile.length == 1){
                        if (+profile[0].money < +args[1]){
                            await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        connection.query(`UPDATE \`storage\` SET money = money + ${args[1]} WHERE \`id\` = '${storage[0].id}'`);
                        connection.query(`UPDATE \`profiles\` SET money = money - ${args[1]} WHERE \`id\` = '${profile[0].id}'`);
                        await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å–∫–ª–∞–¥ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[1]} discord points!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name} [MONEY ST: –±—ã–ª–æ: ${storage[0].money}, —Å—Ç–∞–ª–æ: ${Number((storage[0].money + +args[1])).toFixed(2)}] [MONEY PR: –±—ã–ª–æ: ${profile[0].money}, —Å—Ç–∞–ª–æ: ${Number((profile[0].money - +args[1])).toFixed(2)}]`);
                        return message.delete();
                    }else{
                        await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                        return message.delete();
                    }
                });
            }else{
                args[2] = Number((args[2])).toFixed(2);
                if (uses(message, '/storage_add', ['–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', '—Å—É–º–º–∞'], ['number', 'plus_number'])) return
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                            if (error) return error_mysql(error, message);
                            if (profile.length > 1) return error_mysql(error, message);
                            if (profile.length == 1){
                                if (+profile[0].money < +args[2]){
                                    await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                                    return message.delete();
                                }
                                connection.query(`UPDATE \`storage\` SET money = money + ${args[2]} WHERE \`id\` = '${storage[0].id}'`);
                                connection.query(`UPDATE \`profiles\` SET money = money - ${args[2]} WHERE \`id\` = '${profile[0].id}'`);
                                await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å–∫–ª–∞–¥ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[2]} discord points!\`**`).then(msg => msg.delete(10000));
                                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name} [MONEY ST: –±—ã–ª–æ: ${storage[0].money}, —Å—Ç–∞–ª–æ: ${Number((storage[0].money + +args[2])).toFixed(2)}] [MONEY PR: –±—ã–ª–æ: ${profile[0].money}, —Å—Ç–∞–ª–æ: ${Number((profile[0].money - +args[2])).toFixed(2)}]`);
                                return message.delete();
                            }else{
                                await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                                return message.delete();
                            }
                        });
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content.startsWith('/storage_get')){
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/storage_get', ['—Å—É–º–º–∞'], ['none'])) return
        const args = message.content.slice(`/storage_get`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                args[1] = Number((args[1])).toFixed(2);
                if (uses(message, '/storage_get', ['—Å—É–º–º–∞'], ['plus_number'])) return
                if (+storage[0].money < +args[1]){
                    await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                    if (error) return error_mysql(error, message);
                    if (profile.length > 1) return error_mysql(error, message);
                    if (profile.length == 1){
                        connection.query(`UPDATE \`storage\` SET money = money - ${args[1]} WHERE \`id\` = '${storage[0].id}'`);
                        connection.query(`UPDATE \`profiles\` SET money = money + ${args[1]} WHERE \`id\` = '${profile[0].id}'`);
                        await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[1]} discord points!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${storage[0].name} (MONEY ST: ${storage[0].money} - ${Number((storage[0].money - +args[1])).toFixed(2)}) (MONEY PR: ${profile[0].money} - ${Number((profile[0].money + +args[1])).toFixed(2)})`);
                        return message.delete();
                    }else{
                        connection.query(`UPDATE \`storage\` SET money = money - ${args[1]} WHERE \`id\` = '${storage[0].id}'`);
                        connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${message.guild.id}', '${message.author.id}', '${args[1]}')`);
                        await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[1]} discord points!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${storage[0].name} (MONEY ST: ${storage[0].money} - ${Number((storage[0].money - +args[1])).toFixed(2)}) (MONEY PR: ${profile[0].money} - ${Number((profile[0].money + +args[1])).toFixed(2)})`);
                        return message.delete();
                    }
                });
            }else{
                args[2] = Number((args[2])).toFixed(2);
                if (uses(message, '/storage_get', ['–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', '—Å—É–º–º–∞'], ['number', 'plus_number'])) return
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].money < args[2]){
                            await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                            if (error) return error_mysql(error, message);
                            if (profile.length > 1) return error_mysql(error, message);
                            if (profile.length == 1){
                                connection.query(`UPDATE \`storage\` SET money = money - ${args[2]} WHERE \`id\` = '${storage[0].id}'`);
                                connection.query(`UPDATE \`profiles\` SET money = money + ${args[2]} WHERE \`id\` = '${profile[0].id}'`);
                                await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[2]} discord points!\`**`).then(msg => msg.delete(10000));
                                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${storage[0].name} (MONEY ST: ${storage[0].money} - ${Number((storage[0].money - +args[2]).toFixed(2))}) (MONEY PR: ${profile[0].money} - ${Number((profile[0].money + +args[2]).toFixed(2))})`);
                                return message.delete();
                            }else{
                                connection.query(`UPDATE \`storage\` SET money = money - ${args[2]} WHERE \`id\` = '${storage[0].id}'`);
                                connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${message.guild.id}', '${message.author.id}', '${args[2]}')`);
                                await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[2]} discord points!\`**`).then(msg => msg.delete(10000));
                                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${storage[0].name} (MONEY ST: ${storage[0].money} - ${Number((storage[0].money - +args[2])).toFixed(2)}) (MONEY PR: ${profile[0].money} - ${Number((profile[0].money + +args[2])).toFixed(2)})`);
                                return message.delete();
                            }
                        });
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content == '/storage_help'){
        if (!mysql_load(message, mysql_cooldown)) return
        const embed = new Discord.RichEmbed();
        embed.setTitle('–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–∑–æ–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ–º');
        embed.addField(`–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥`, `**/storage - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏\n` +
        `/storage_help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n` +
        `/storage_description - –ø–æ–º–µ–Ω—è—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è\n` +
        `/storage_status - –æ—Ç–∫—Ä—ã—Ç—å –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ\n` +
        `/storage_up - –ø–æ–≤—ã—Å–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è\n` +
        `/storage_cost - –ø–æ–º–µ–Ω—è—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏\n` +
        `/storage_add - –ø–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ\n` +
        `/storage_get - —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è**`);
        embed.addField(`–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ`, `**–í–∞—à–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ —Ç–µ—Ä—è–µ—Ç –≤ —á–∞—Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—É—é —Å—É–º–º—É, –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å–∫–ª–∞–¥ (/storage_add), –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –∫–æ–º–∞–Ω–¥–æ–π (/storage_status).**`);
        message.member.send(embed).then(() => {
            message.reply(`**\`–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`).then(msg => msg.delete(12000));
        }).catch(() => {
            await message.reply(`**\`–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. err: access denied for user\`**`).then(msg => msg.delete(12000));
        });
        return message.delete();
    }

    if (message.content.startsWith('/storage')){
        if (!mysql_load(message, mysql_cooldown)) return
        const args = message.content.slice(`/storage`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                const embed = new Discord.RichEmbed();
                if (storage[0].status == true){
                    storage[0].status = '–æ—Ç–∫—Ä—ã—Ç–æ';
                    embed.setColor('#008000');
                }else{
                    storage[0].status = '–∑–∞–∫—Ä—ã—Ç–æ';
                    embed.setColor('#FF0000');
                }
                embed.setTitle(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏ ${storage[0].name} [‚Ññ${storage[0].id}]`);
                embed.setDescription(`**–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].name}\`\n` +
                `–°—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].status}\`\n` +
                `–£—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].level} [${Number((storage[0].level * storage[0].min_cost * 30)).toFixed(2)}]\`\n` +
                `–û–ø–∏—Å–∞–Ω–∏–µ: \`${storage[0].description}\`\n` +
                `–í–ª–∞–¥–µ–ª–µ—Ü: ${message.member}\n` +
                `–°—Ç–æ–∏–º–æ—Å—Ç—å: \`${Number((storage[0].cost)).toFixed(2)}\` ‚ÇØ\n` +
                `–î–µ–Ω–µ–≥: \`${Number((storage[0].money)).toFixed(2)}\` ‚ÇØ\n` +
                `–ù–∞–ª–æ–≥: \`${Number((storage[0].nalog)).toFixed(2)}\` ‚ÇØ\n` +
                `–í—Ä–µ–º—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: \`${time(storage[0].date)}\`**`);
                await message.reply(embed);
                return message.delete();
            }else{
                if (!isNumeric(args[1])){
                    await message.reply(`**\`—É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: /storage_description [–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ] [–æ–ø–∏—Å–∞–Ω–∏–µ]\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        const embed = new Discord.RichEmbed();
                        if (storage[0].status == true){
                            storage[0].status = '–æ—Ç–∫—Ä—ã—Ç–æ';
                            embed.setColor('#008000');
                        }else{
                            storage[0].status = '–∑–∞–∫—Ä—ã—Ç–æ';
                            embed.setColor('#FF0000');
                        }
                        embed.setTitle(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏ ${storage[0].name} [‚Ññ${storage[0].id}]`);
                        embed.setDescription(`**–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].name}\`\n` +
                        `–°—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].status}\`\n` +
                        `–£—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].level} [${Number((storage[0].level * storage[0].min_cost * 30)).toFixed(2)}]\`\n` +
                        `–û–ø–∏—Å–∞–Ω–∏–µ: \`${storage[0].description}\`\n` +
                        `–í–ª–∞–¥–µ–ª–µ—Ü: ${message.member}\n` +
                        `–°—Ç–æ–∏–º–æ—Å—Ç—å: \`${Number((storage[0].cost)).toFixed(2)}\` ‚ÇØ\n` +
                        `–î–µ–Ω–µ–≥: \`${Number((storage[0].money)).toFixed(2)}\` ‚ÇØ\n` +
                        `–ù–∞–ª–æ–≥: \`${Number((storage[0].nalog)).toFixed(2)}\` ‚ÇØ\n` +
                        `–í—Ä–µ–º—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: \`${time(storage[0].date)}\`**`);
                        await message.reply(embed);
                        return message.delete();
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    // –ö–æ–Ω–µ—Ü —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è–º–∏

    // –†–∞–±–æ—Ç–∞ —Å –º–∞–≥–∞–∑–∏–Ω–æ–º

    if (message.content.startsWith('/shop_status')){
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/shop_status', ['—Å–æ—Å—Ç–æ—è–Ω–∏–µ (1/0)'], ['none'])) return
        const args = message.content.slice(`/shop_status`).split(/ +/);
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –∑–∞–≤–µ–¥–µ–Ω–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                if (uses(message, '/shop_status', ['—Å–æ—Å—Ç–æ—è–Ω–∏–µ (1/0)'], ['status'])) return
                if (storage[0].money < storage[0].nalog){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`buy_dashboard\` SET status = '${args[1]}' WHERE \`id\` = '${storage[0].id}'`);
                await message.reply(`**\`—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—é ${storage[0].name} –Ω–∞ ${args[1]}`);
                return message.delete();
            }else{
                if (uses(message, '/shop_status', ['–∑–∞–≤–µ–¥–µ–Ω–∏–µ', '—Å–æ—Å—Ç–æ—è–Ω–∏–µ (1/0)'], ['number', 'status'])) return
                connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].money < storage[0].nalog){
                            await message.reply(`**\`–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(12000));
                            return message.delete();
                        }
                        connection.query(`UPDATE \`buy_dashboard\` SET status = '${args[2]}' WHERE \`id\` = '${storage[0].id}'`);
                        await message.reply(`**\`—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—é ${storage[0].name} –Ω–∞ ${args[2]}`);
                        return message.delete();
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content.startsWith('/shop_description')){
        if (!mysql_load(message, mysql_cooldown)) return
        const args = message.content.slice(`/shop_description`).split(/ +/);
        if (!args[1]){
            await message.reply('**\`–≤–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ-—Ç–æ!\`**').then(msg => msg.delete(7000));
            return message.delete();
        }
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –∑–∞–≤–µ–¥–µ–Ω–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                if (storage[0].status == false){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                const description = args.slice(1).join(' ');
                if (description.length > 500){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ–ª—å—à–µ 500 —Å–∏–º–≤–æ–ª–æ–≤!\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`buy_dashboard\` SET description = '${description}' WHERE \`id\` = '${storage[0].id}'`);
                await message.reply(`**\`–æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª –∑–∞–≤–µ–¥–µ–Ω–∏—é –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storage[0].name} –Ω–∞ ${description}`);
                return message.delete();
            }else{
                if (!isNumeric(args[1])){
                    await message.reply(`**\`—É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è: /shop_description [–∑–∞–≤–µ–¥–µ–Ω–∏–µ] [–æ–ø–∏—Å–∞–Ω–∏–µ]\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].status == false){
                            await message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        const description = args.slice(2).join(' ');
                        if (description.length > 500){
                            await message.reply(`**\`–Ω–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ–ª—å—à–µ 500 —Å–∏–º–≤–æ–ª–æ–≤!\`**`).then(msg => msg.delete(12000));
                            return message.delete();
                        }
                        connection.query(`UPDATE \`buy_dashboard\` SET description = '${description}' WHERE \`id\` = '${storage[0].id}'`);
                        await message.reply(`**\`–æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—é ${storage[0].name} –Ω–∞ ${description}`);
                        return message.delete();
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content.startsWith('/shop_cost')){
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/shop_cost', ['—Å—É–º–º–∞'], ['none'])) return
        const args = message.content.slice(`/shop_cost`).split(/ +/);
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –∑–∞–≤–¥–µ–Ω–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                args[1] = Number((args[1])).toFixed(2);
                if (uses(message, '/shop_cost', ['—Å—É–º–º–∞'], ['plus_number'])) return
                if (storage[0].status == false){
                    await message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                connection.query(`UPDATE \`buy_dashboard\` SET cost = '${args[1]}' WHERE \`id\` = '${storage[0].id}'`);
                await message.reply(`**\`—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–∞ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!\`**`).then(msg => msg.delete(10000));
                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ c ${storage[0].cost} –Ω–∞ ${args[1]} ‚Äî –∑–∞–≤–µ–¥–µ–Ω–∏—é ${storage[0].name}`);
                return message.delete();
            }else{
                args[2] = Number((args[2])).toFixed(2);
                if (uses(message, '/shop_cost', ['–∑–∞–≤–µ–¥–µ–Ω–∏–µ', '—Å—É–º–º–∞'], ['number', 'plus_number'])) return
                connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].status == false){
                            await message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        connection.query(`UPDATE \`buy_dashboard\` SET cost = '${args[2]}' WHERE \`id\` = '${storage[0].id}'`);
                        await message.reply(`**\`—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–∞ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –∏–∑–º–µ–Ω–∏–ª —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ c ${storage[0].cost} –Ω–∞ ${args[2]} ‚Äî –∑–∞–≤–µ–¥–µ–Ω–∏—é ${storage[0].name}`);
                        return message.delete();
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content.startsWith('/shop_add')){
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/shop_add', ['—Å—É–º–º–∞'], ['none'])) return
        const args = message.content.slice(`/storage_add`).split(/ +/);
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –∑–∞–≤–µ–¥–µ–Ω–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                args[1] = Number((args[1])).toFixed(2);
                if (uses(message, '/shop_add', ['—Å—É–º–º–∞'], ['plus_number'])) return
                connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                    if (error) return error_mysql(error, message);
                    if (profile.length > 1) return error_mysql(error, message);
                    if (profile.length == 1){
                        if (+profile[0].money < +args[1]){
                            await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        connection.query(`UPDATE \`buy_dashboard\` SET money = money + ${args[1]} WHERE \`id\` = '${storage[0].id}'`);
                        connection.query(`UPDATE \`profiles\` SET money = money - ${args[1]} WHERE \`id\` = '${profile[0].id}'`);
                        await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–µ ${args[1]} discord points!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ ${args[1]} ‚Äî –∑–∞–≤–µ–¥–µ–Ω–∏—é ${storage[0].name} [MONEY ST: –±—ã–ª–æ: ${storage[0].money}, —Å—Ç–∞–ª–æ: ${Number((storage[0].money + +args[1])).toFixed(2)}] [MONEY PR: –±—ã–ª–æ: ${profile[0].money}, —Å—Ç–∞–ª–æ: ${Number((profile[0].money - +args[1])).toFixed(2)}]`);
                        return message.delete();
                    }else{
                        await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                        return message.delete();
                    }
                });
            }else{
                args[2] = Number((args[2])).toFixed(2);
                if (uses(message, '/shop_add', ['–∑–∞–≤–µ–¥–µ–Ω–∏–µ', '—Å—É–º–º–∞'], ['number', 'plus_number'])) return
                connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                            if (error) return error_mysql(error, message);
                            if (profile.length > 1) return error_mysql(error, message);
                            if (profile.length == 1){
                                if (+profile[0].money < +args[2]){
                                    await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                                    return message.delete();
                                }
                                connection.query(`UPDATE \`buy_dashboard\` SET money = money + ${args[2]} WHERE \`id\` = '${storage[0].id}'`);
                                connection.query(`UPDATE \`profiles\` SET money = money - ${args[2]} WHERE \`id\` = '${profile[0].id}'`);
                                await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–µ ${args[2]} discord points!\`**`).then(msg => msg.delete(10000));
                                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ ${args[1]} ‚Äî –∑–∞–≤–µ–¥–µ–Ω–∏—é ${storage[0].name} [MONEY ST: –±—ã–ª–æ: ${storage[0].money}, —Å—Ç–∞–ª–æ: ${Number((storage[0].money + +args[2])).toFixed(2)}] [MONEY PR: –±—ã–ª–æ: ${profile[0].money}, —Å—Ç–∞–ª–æ: ${Number((profile[0].money - +args[2])).toFixed(2)}]`);
                                return message.delete();
                            }else{
                                await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                                return message.delete();
                            }
                        });
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content.startsWith('/shop_get')){
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/shop_get', ['—Å—É–º–º–∞'], ['none'])) return
        const args = message.content.slice(`/shop_get`).split(/ +/);
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –∑–∞–≤–µ–¥–µ–Ω–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                args[1] = Number((args[1])).toFixed(2);
                if (uses(message, '/shop_get', ['—Å—É–º–º–∞'], ['plus_number'])) return
                if (+storage[0].money < +args[1]){
                    await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                    if (error) return error_mysql(error, message);
                    if (profile.length > 1) return error_mysql(error, message);
                    if (profile.length == 1){
                        connection.query(`UPDATE \`buy_dashboard\` SET money = money - ${args[1]} WHERE \`id\` = '${storage[0].id}'`);
                        connection.query(`UPDATE \`profiles\` SET money = money + ${args[1]} WHERE \`id\` = '${profile[0].id}'`);
                        await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –∑–∞–≤–µ–¥–µ–Ω–∏—è ${args[1]} discord points!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[1]} ‚Äî –∑–∞–≤–µ–¥–µ–Ω–∏—è ${storage[0].name} (MONEY ST: ${storage[0].money} - ${Number((storage[0].money - +args[1])).toFixed(2)}) (MONEY PR: ${profile[0].money} - ${Number((profile[0].money + +args[1])).toFixed(2)})`);
                        return message.delete();
                    }else{
                        connection.query(`UPDATE \`buy_dashboard\` SET money = money - ${args[1]} WHERE \`id\` = '${storage[0].id}'`);
                        connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${message.guild.id}', '${message.author.id}', '${args[1]}')`);
                        await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –∑–∞–≤–µ–¥–µ–Ω–∏—è ${args[1]} discord points!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[1]} ‚Äî –∑–∞–≤–µ–¥–µ–Ω–∏—è ${storage[0].name} (MONEY ST: ${storage[0].money} - ${Number((storage[0].money - +args[1])).toFixed(2)}) (MONEY PR: ${profile[0].money} - ${Number((profile[0].money + +args[1])).toFixed(2)})`);
                        return message.delete();
                    }
                });
            }else{
                args[2] = Number((args[2])).toFixed(2);
                if (uses(message, '/shop_get', ['–∑–∞–≤–µ–¥–µ–Ω–∏–µ', '—Å—É–º–º–∞'], ['number', 'plus_number'])) return
                connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].money < args[2]){
                            await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                            if (error) return error_mysql(error, message);
                            if (profile.length > 1) return error_mysql(error, message);
                            if (profile.length == 1){
                                connection.query(`UPDATE \`buy_dashboard\` SET money = money - ${args[2]} WHERE \`id\` = '${storage[0].id}'`);
                                connection.query(`UPDATE \`profiles\` SET money = money + ${args[2]} WHERE \`id\` = '${profile[0].id}'`);
                                await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –∑–∞–≤–µ–¥–µ–Ω–∏—è ${args[2]} discord points!\`**`).then(msg => msg.delete(10000));
                                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[1]} ‚Äî –∑–∞–≤–µ–¥–µ–Ω–∏—è ${storage[0].name} (MONEY ST: ${storage[0].money} - ${Number((storage[0].money - +args[2]).toFixed(2))}) (MONEY PR: ${profile[0].money} - ${Number((profile[0].money + +args[2]).toFixed(2))})`);
                                return message.delete();
                            }else{
                                connection.query(`UPDATE \`buy_dashboard\` SET money = money - ${args[2]} WHERE \`id\` = '${storage[0].id}'`);
                                connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${message.guild.id}', '${message.author.id}', '${args[2]}')`);
                                await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è ${args[2]} discord points!\`**`).then(msg => msg.delete(10000));
                                send_action(message.guild.id, `${message.member.displayName || message.author.tag} (${message.author.id}) —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[1]} ‚Äî –∑–∞–≤–µ–¥–µ–Ω–∏—è ${storage[0].name} (MONEY ST: ${storage[0].money} - ${Number((storage[0].money - +args[2])).toFixed(2)}) (MONEY PR: ${profile[0].money} - ${Number((profile[0].money + +args[2])).toFixed(2)})`);
                                return message.delete();
                            }
                        });
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    if (message.content.startsWith('/shop_buy')){
        if (!mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/shop_buy', ['–∫–æ–ª-–≤–æ'], ['plus_number_integer'])) return
        const args = message.content.slice(`/shop_buy`).split(/ +/);
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, shop) => {
            if (error) return error_mysql(error, message);
            if (shop.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –∑–∞–≤–µ–¥–µ–Ω–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (shop.length == 1){
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`id\` = '${shop[0].storage_id}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length > 1){
                        return error_mysql('–ú–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π', message);
                    }else{
                        connection.query(`SELECT * FROM \`items\` WHERE \`server\` = '${message.guild.id}' AND \`storage\` = '${storage[0].id}'`, async (error, items) => {
                            if (storage[0].status == false){
                                await message.reply(`**\`–Ω–µ–ª—å–∑—è –∑–∞–∫—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –∑–∞–∫—Ä—ã—Ç–æ!\`**`).then(msg => msg.delete(10000));
                                return message.delete();
                            }
                            if (items.length >= storage[0].level){
                                await message.reply(`**\`–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç ${items.length} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ ${storage[0].level}, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!\`**`).then(msg => msg.delete(18000));
                                return message.delete();
                            }
                            if ((+items.length + +args[1]) > storage[0].level){
                                await message.reply(`**\`–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–∞–∫–æ–µ –∫–æ–ª-–≤–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.\`**`).then(msg => msg.delete(18000));
                                return message.delete();
                            }
                            if ((+storage[0].amount - args[1]) <= 0){
                                await message.reply(`**\`–Ω–∞ —Å–∫–ª–∞–¥–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ç–∞–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤!\`**`).then(msg => msg.delete(7000));
                                return message.delete();
                            }
                            if ((+args[1] * storage[0].cost) > shop[0].money){
                                await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(7000));
                                return message.delete();
                            }
                            connection.query(`UPDATE \`buy_dashboard\` SET money = money - ${+args[1] * storage[0].cost} WHERE \`id\` = '${shop[0].id}'`);
                            connection.query(`UPDATE \`storage\` SET money = money + ${+args[1] * storage[0].cost} WHERE \`id\` = '${storage[0].id}'`);
                            connection.query(`UPDATE \`storage\` SET amount = amount - ${+args[1]} WHERE \`id\` = '${storage[0].id}'`);
                            for (let i = 0; i < args[1]; i++){
                                connection.query(`INSERT INTO \`items\` (\`server\`, \`creator\`, \`storage\`, \`dashboard\`, \`date_end\`) VALUES ('${message.guild.id}', '${message.author.id}', '${storage[0].id}', '${shop[0].id}', '${new Date().valueOf() + +storage[0].date}')`);
                            }
                            await message.reply(`**\`–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –±—ã–ª–æ –∑–∞–ø—É—â–µ–Ω–æ! –í—Ä–µ–º—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: ${time(storage[0].date)}\`**`).then(msg => msg.delete(18000));
                            return message.delete();
                        });
                    }
                });
            }else{
                if (uses(message, '/shop_buy', ['–∑–∞–≤–µ–¥–µ–Ω–∏–µ', '–∫–æ–ª-–≤–æ'], ['number', 'plus_number_integer'])) return
                connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`, async (error, shop) => {
                    if (error) return error_mysql(error, message);
                    if (shop.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (shop.length == 1){
                        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`id\` = '${shop[0].storage_id}'`, async (error, storage) => {
                            if (error) return error_mysql(error, message);
                            if (storage.length == 0){
                                await message.reply(`**\`–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.\`**`).then(msg => msg.delete(18000));
                                return message.delete();
                            }else if (storage.length > 1){
                                return error_mysql('–ú–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π', message);
                            }else{
                                connection.query(`SELECT * FROM \`items\` WHERE \`server\` = '${message.guild.id}' AND \`storage\` = '${storage[0].id}'`, async (error, items) => {
                                    if (storage[0].status == false){
                                        await message.reply(`**\`–Ω–µ–ª—å–∑—è –∑–∞–∫—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –∑–∞–∫—Ä—ã—Ç–æ!\`**`).then(msg => msg.delete(10000));
                                        return message.delete();
                                    }
                                    if (items.length >= storage[0].level){
                                        await message.reply(`**\`–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç ${items.length} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ ${storage[0].level}, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!\`**`).then(msg => msg.delete(18000));
                                        return message.delete();
                                    }
                                    if ((+item.length + +args[2]) > storage[0].level){
                                        await message.reply(`**\`–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–∞–∫–æ–µ –∫–æ–ª-–≤–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.\`**`).then(msg => msg.delete(18000));
                                        return message.delete();
                                    }
                                    if ((+args[2] * storage[0].cost) > shop[0].money){
                                        await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(7000));
                                        return message.delete();
                                    }
                                    connection.query(`UPDATE \`buy_dashboard\` SET money = money - ${+args[2] * storage[0].cost} WHERE \`id\` = '${shop[0].id}'`);
                                    connection.query(`UPDATE \`storage\` SET money = money + ${+args[2] * storage[0].cost} WHERE \`id\` = '${storage[0].id}'`);
                                    for (let i = 0; i < args[2]; i++){
                                        connection.query(`INSERT INTO \`items\` (\`server\`, \`creator\`, \`storage\`, \`dashboard\`, \`date_end\`) VALUES ('${message.guild.id}', '${message.author.id}', '${storage[0].id}', '${shop[0].id}', '${new Date().valueOf() + +date}')`);
                                    }
                                    await message.reply(`**\`–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –±—ã–ª–æ –∑–∞–ø—É—â–µ–Ω–æ! –í—Ä–µ–º—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: ${time(storage[0].date)}\`**`).then(msg => msg.delete(18000));
                                    return message.delete();
                                });
                            }
                        });
                    }
                });
            }
        });
    }

    if (message.content.startsWith('/shop')){
        if (!mysql_load(message, mysql_cooldown)) return
        const args = message.content.slice(`/shop`).split(/ +/);
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(error, message);
            if (storage.length == 0){
                await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –∑–∞–≤–µ–¥–µ–Ω–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                const embed = new Discord.RichEmbed();
                if (storage[0].status == true){
                    storage[0].status = '–æ—Ç–∫—Ä—ã—Ç–æ';
                    embed.setColor('#008000');
                }else{
                    storage[0].status = '–∑–∞–∫—Ä—ã—Ç–æ';
                    embed.setColor('#FF0000');
                }
                embed.setTitle(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≤–µ–¥–µ–Ω–∏–∏ ${storage[0].name} [‚Ññ${storage[0].id}]`);
                embed.setDescription(`**–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è: \`${storage[0].name}\`\n` +
                `–°—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].status}\`\n` +
                `–£—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].level} [${Number((storage[0].level * storage[0].min_cost * 30)).toFixed(2)}]\`\n` +
                `–û–ø–∏—Å–∞–Ω–∏–µ: \`${storage[0].description}\`\n` +
                `–í–ª–∞–¥–µ–ª–µ—Ü: ${message.member}\n` +
                `–°—Ç–æ–∏–º–æ—Å—Ç—å: \`${Number((storage[0].cost)).toFixed(2)}\` ‚ÇØ\n` +
                `–î–µ–Ω–µ–≥: \`${Number((storage[0].money)).toFixed(2)}\` ‚ÇØ\n` +
                `–ù–∞–ª–æ–≥: \`${Number((storage[0].nalog)).toFixed(2)}\` ‚ÇØ\n` +
                `–í—Ä–µ–º—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: \`${time(storage[0].date)}\`**`);
                await message.reply(embed);
                return message.delete();
            }else{
                if (!isNumeric(args[1])){
                    await message.reply(`**\`—É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: /storage_description [–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ] [–æ–ø–∏—Å–∞–Ω–∏–µ]\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(error, message);
                    if (storage.length == 0){
                        await message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        const embed = new Discord.RichEmbed();
                        if (storage[0].status == true){
                            storage[0].status = '–æ—Ç–∫—Ä—ã—Ç–æ';
                            embed.setColor('#008000');
                        }else{
                            storage[0].status = '–∑–∞–∫—Ä—ã—Ç–æ';
                            embed.setColor('#FF0000');
                        }
                        embed.setTitle(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏ ${storage[0].name} [‚Ññ${storage[0].id}]`);
                        embed.setDescription(`**–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].name}\`\n` +
                        `–°—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].status}\`\n` +
                        `–£—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: \`${storage[0].level} [${Number((storage[0].level * storage[0].min_cost * 30)).toFixed(2)}]\`\n` +
                        `–û–ø–∏—Å–∞–Ω–∏–µ: \`${storage[0].description}\`\n` +
                        `–í–ª–∞–¥–µ–ª–µ—Ü: ${message.member}\n` +
                        `–°—Ç–æ–∏–º–æ—Å—Ç—å: \`${Number((storage[0].cost)).toFixed(2)}\` ‚ÇØ\n` +
                        `–î–µ–Ω–µ–≥: \`${Number((storage[0].money)).toFixed(2)}\` ‚ÇØ\n` +
                        `–ù–∞–ª–æ–≥: \`${Number((storage[0].nalog)).toFixed(2)}\` ‚ÇØ\n` +
                        `–í—Ä–µ–º—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: \`${time(storage[0].date)}\`**`);
                        await message.reply(embed);
                        return message.delete();
                    }else{
                        return error_mysql(error, message);
                    }
                });
            }
        });
        return
    }

    // –ö–æ–Ω–µ—Ü —Ä–∞–±–æ—Ç—ã —Å –º–∞–≥–∞–∑–∏–Ω–æ–º
}