const Discord = require('discord.js');
const fs = require("fs");

function isFloat(n){
    if (!isInteger(n)){
        return false;
    }else{
        return Number(n) === n && n % 1 !== 0;
    }
}

function isInteger(n) {
    return n === +n && n === (n|0);
}

exports.run = async (bot, message, ds_cooldown, connection, mysql_cooldown) => {

    if (!message.member.roles) return
    if (!message.member.roles.some(r => r.name == '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π üîê')) return

    if (!ds_cooldown.has(message.author.id)){
        ds_cooldown.add(message.author.id);
        setTimeout(() => {
            if (ds_cooldown.has(message.author.id)) ds_cooldown.delete(message.author.id);
        }, 180000);
        connection.query(`SELECT \`id\`, \`userid\`, \`points\` FROM \`accounts\` WHERE \`userid\` = '${message.author.id}'`, async (error, result, packets) => {
            if (error) return console.error(error);
            if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
            if (result.length == 0){
                connection.query(`INSERT INTO \`accounts\` (\`userid\`, \`points\`) VALUES ('${message.author.id}', '0.5')`);
            }else{
                connection.query(`UPDATE \`accounts\` SET points = points + 0.5 WHERE \`userid\` = '${message.author.id}'`);
            }
        });
    }

    if (message.content == '/balance'){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø–æ—Ä–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        connection.query(`SELECT \`id\`, \`userid\`, \`points\` FROM \`accounts\` WHERE \`userid\` = '${message.author.id}'`, async (error, result, packets) => {
            if (error) return console.error(error);
            if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#352]`);
            if (result.length == 0){
                message.reply(`**–≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 0 ‚ÇØ**`);
                return message.delete();
            }else{
                message.reply(`**–≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${result[0].points} ‚ÇØ**`);
                return message.delete();
            }
        });
    }

    if (message.content.startsWith("/change_cost")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø–æ—Ä–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/change_cost`).split(/ +/);
        if (!args[1]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /change_cost [—Å—É–º–º–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        if (!isFloat(+args[1]) || +args[1] <= 0){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /change_cost [—Å—É–º–º–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        if (!args[2]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /change_cost [—Å—É–º–º–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        const name = args.slice(2).join(' ');
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`, async (err, result, fields) => {
            if (result.length < 1 || result.length > 1){
                message.reply(`\`—Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤–∞—à!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`UPDATE \`buy_dashboard\` SET cost = ${args[1]} WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`);
            message.reply(`**\`–æ–±–Ω–æ–≤–ª–µ–Ω–æ! –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã.\`**`);
            return message.delete();
        });
    }

    if (message.content.startsWith("/get_cost")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø–æ—Ä–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/get_cost`).split(/ +/);
        if (!args[1]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_cost [—Å—É–º–º–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        if (!isFloat(+args[1]) || +args[1] <= 0){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_cost [—Å—É–º–º–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        if (!args[2]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_cost [—Å—É–º–º–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        const name = args.slice(2).join(' ');
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`, async (err, result, fields) => {
            if (result.length < 1 || result.length > 1){
                message.reply(`\`—Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤–∞—à!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (args[1] > result[0].cost_storage){
                message.reply(`\`–≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å —Å—É–º–º—É –±–æ–ª–µ–µ, —á–µ–º –µ—Å—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`SELECT \`id\`, \`userid\`, \`points\` FROM \`accounts\` WHERE \`userid\` = '${message.author.id}'`, async (error, result, packets) => {
                if (error) return console.error(error);
                if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
                if (result.length == 0){
                    connection.query(`INSERT INTO \`accounts\` (\`userid\`, \`points\`) VALUES ('${message.author.id}', '${args[1]}')`);
                    connection.query(`UPDATE \`buy_dashboard\` SET cost_storage = cost_storage - ${+args[1]} WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`);
                    message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ —Å –º–∞–≥–∞–∑–∏–Ω–∞ ${args[1]}\` ‚ÇØ**`);
                    return message.delete();
                }else{
                    connection.query(`UPDATE \`accounts\` SET points = points + ${+args[1]} WHERE \`userid\` = '${message.author.id}'`);
                    connection.query(`UPDATE \`buy_dashboard\` SET cost_storage = cost_storage - ${+args[1]} WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`);
                    message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ —Å –º–∞–≥–∞–∑–∏–Ω–∞ ${args[1]}\` ‚ÇØ**`);
                    return message.delete();
                }
            });
        });
    }

    if (message.content.startsWith("/add_cost")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø–æ—Ä–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/get_cost`).split(/ +/);
        if (!args[1]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_cost [—Å—É–º–º–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        if (!isFloat(+args[1]) || +args[1] <= 0){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_cost [—Å—É–º–º–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        if (!args[2]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_cost [—Å—É–º–º–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        const name = args.slice(2).join(' ');
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`, async (err, result, fields) => {
            if (result.length < 1 || result.length > 1){
                message.reply(`\`—Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤–∞—à!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (args[1] < result[0].cost_storage){
                message.reply(`\`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å—É–º–º—É, –±–æ–ª–µ–µ —á–µ–º —É –≤–∞—Å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`SELECT \`id\`, \`userid\`, \`points\` FROM \`accounts\` WHERE \`userid\` = '${message.author.id}'`, async (error, result, packets) => {
                if (error) return console.error(error);
                if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
                if (result.length == 0){
                    message.reply(`\`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å—É–º–º—É, –±–æ–ª–µ–µ —á–µ–º —É –≤–∞—Å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ!\``).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`accounts\` SET points = points - ${+args[1]} WHERE \`userid\` = '${message.author.id}'`);
                connection.query(`UPDATE \`buy_dashboard\` SET cost_storage = cost_storage + ${+args[1]} WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`);
                message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –≤ –º–∞–≥–∞–∑–∏–Ω ${args[1]}\` ‚ÇØ**`);
                return message.delete();
            });
        });
    }

    if (message.content.startsWith("/add_amount")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø–æ—Ä–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/add_amount`).split(/ +/);
        if (!args[1]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_amount [–∫–æ–ª-–≤–æ] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        if (!isInteger(+args[1]) || +args[1] <= 0){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_amount [–∫–æ–ª-–≤–æ] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        if (!args[2]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_amount [–∫–æ–ª-–≤–æ] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        const name = args.slice(2).join(' ');
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`, async (err, result, fields) => {
            if (result.length < 1 || result.length > 1){
                message.reply(`\`—Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤–∞—à!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (args[1] < result[0].storage){
                message.reply(`\`–≤ –º–∞–≥–∞–∑–∏–Ω–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`UPDATE \`buy_dashboard\` SET storage = storage + ${+args[1]} WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`);
            connection.query(`UPDATE \`buy_dashboard\` SET amount = amount - ${+args[1]} WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`);
            message.reply(`\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞! –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã.\``).then(msg => msg.delete(12000));
            return message.delete();
        });
    };

    if (message.content.startsWith("/get_amount")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø–æ—Ä–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/get_amount`).split(/ +/);
        if (!args[1]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_amount [–∫–æ–ª-–≤–æ] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        if (!isInteger(+args[1]) || +args[1] <= 0){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_amount [–∫–æ–ª-–≤–æ] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        if (!args[2]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_amount [–∫–æ–ª-–≤–æ] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
            return message.delete();
        }
        const name = args.slice(2).join(' ');
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`, async (err, result, fields) => {
            if (result.length < 1 || result.length > 1){
                message.reply(`\`—Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤–∞—à!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (args[1] > result[0].storage){
                message.reply(`\`–Ω–∞ —Å–∫–ª–∞–¥–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`UPDATE \`buy_dashboard\` SET storage = storage - ${+args[1]} WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`);
            connection.query(`UPDATE \`buy_dashboard\` SET amount = amount + ${+args[1]} WHERE \`created\` = '${message.author.id}' AND \`name\` = '${name}'`);
            message.reply(`\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞! –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã.\``).then(msg => msg.delete(12000));
            return message.delete();
        });
    };

    if (message.content.startsWith("/buy_market")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø–æ—Ä–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/buy_market`).split(/ +/);
        if (!args[1]){
            message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /buy_market [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\`**`);
            return message.delete();
        }
        const name = args.slice(1).join(' ');
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`name\` = '${name}'`, async (err_mag, result_mag, fields_mag) => {
            if (result_mag.length < 1 || result_mag.length > 1){
                message.reply(`\`—Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (result_mag[0].amount <= 0){
                message.reply(`\`—Ç–æ–≤–∞—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –µ–≥–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`SELECT * FROM \`accounts\` WHERE \`userid\` = '${message.author.id}'`, async (error, result, packets) => {
                if (error) return console.error(error);
                if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
                if (result.length == 0){
                    message.reply(`**\`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                if (result[0].points < result_mag[0].cost){
                    message.reply(`**\`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`accounts\` SET points = points - ${+result_mag[0].cost} WHERE \`userid\` = '${message.author.id}'`);
                connection.query(`UPDATE \`buy_dashboard\` SET cost_storage = cost_storage + ${+result_mag[0].cost} WHERE \`name\` = '${name}'`);
                connection.query(`UPDATE \`buy_dashboard\` SET amount = amount - 1 WHERE \`name\` = '${name}'`);
                eval(result_mag[0].code);
                message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–±—Ä–µ–ª–∏ —Ç–æ–≤–∞—Ä!\`**`).then(msg => msg.delete(12000));
                return message.delete();
            });
        });
    }
}