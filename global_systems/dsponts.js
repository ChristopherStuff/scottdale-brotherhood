const Discord = require('discord.js');
const fs = require("fs");

function isInteger(n) {
    return n === +n && n === (n|0);
}

function isNumeric(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
}

function error_mysql(message){
    message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`).then(msg => msg.delete(20000));
    const embed = new Discord.RichEmbed();
    embed.setDescription(`**${message.member}, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ—Å—Ç–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –≤ –Ω–∞—à–µ–º [—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ](https://robo-hamster.ru/index.php?forums/%D0%A2%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB.5/). –ö–æ–¥ –æ—à–∏–±–∫–∏: #752**`);
    message.member.send(embed);
    return message.delete();
}

function mysql_load(message, mysql_cooldown){
    if (mysql_cooldown.has(message.author.id)){
        message.reply(`**\`–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã.\`**`).then(msg => msg.delete(3000));
        message.delete();
        return true;
    }
    mysql_cooldown.add(message.author.id);
    setTimeout(() => {
        if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
    }, 4000);
    return false;
}

function uses(message, command, uses_args, settings_args){
    const args = message.content.slice(`${command}`).split(/ +/);
    if (+args.length - 1 != uses_args.length){
        message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\`**`).then(msg => msg.delete(12000));
        message.delete();
        return true;
    }
    for (let i = 0; i <= settings_args.length; i++){
        if (settings_args[i] == 'number'){
            if (!isNumeric(args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'integer'){
            if (!isNumeric(args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
            if (!isInteger(+args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —Ü–µ–ª–æ–µ.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'mention'){
            let user = message.guild.member(message.mentions.users.first());
            if (!user){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'mention_user'){
            let user = message.guild.member(message.mentions.users.first());
            if (!user){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }else if (user.id == message.author.id){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –Ω–∞ —Å–µ–±—è –Ω–µ–ª—å–∑—è!\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'plus_number'){
            if (!isNumeric(args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
            if (args[+i + 1] <= 0){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }else if (settings_args[i] == 'status'){
            if (!isNumeric(args[+i + 1])){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
            if (args[+i + 1] != 0 && args[+i + 1] != 1){
                message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${command} [${uses_args.join('] [')}]\nError: –∑–Ω–∞—á–µ–Ω–∏–µ '${uses_args[i]}' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–ª–∏ '0', –∏–ª–∏ '1'.\`**`).then(msg => msg.delete(12000));
                message.delete();
                return true;
            }
        }
    }
    return false;
}

exports.run = async (bot, message, ds_cooldown, connection, mysql_cooldown, send_action) => {
    if (!message.member.roles) return
    if (!message.member.roles.some(r => r.name == '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π üîê')) return

    if (!ds_cooldown.has(message.author.id)){
        ds_cooldown.add(message.author.id);
        setTimeout(() => {
            if (ds_cooldown.has(message.author.id)) ds_cooldown.delete(message.author.id);
        }, 180000);
        connection.query(`SELECT \`id\`, \`server\` \`user\`, \`money\` FROM \`profiles\` WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`, async (error, result, packets) => {
            if (error) return console.error(error);
            if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
            if (result.length == 0){
                connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${message.guild.id}', '${message.author.id}', '0.5')`);
            }else{
                connection.query(`UPDATE \`profiles\` SET money = money + 0.5 WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`);
            }
        });
    }

    if (message.content.startsWith('/setstat')){
        if (!message.member.hasPermission("ADMINISTRATOR")) return
        if (mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/setstat', ['serverid', 'userid', 'money'], ['number', 'number', 'number'])) return
        const args = message.content.slice(`/setstat`).split(/ +/);
        connection.query(`SELECT \`id\`, \`server\` \`user\`, \`money\` FROM \`profiles\` WHERE \`user\` = '${args[2]}' AND \`server\` = '${args[1]}'`, async (error, result, packets) => {
            if (error) return console.error(error);
            if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
            if (result.length == 0){
                connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${args[1]}', '${args[2]}', '${args[3]}')`);
                send_action(message.guild.id, `<@${message.author.id}> –¥–æ–±–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${args[2]} ${args[3]} dp. (MONEY: ${args[3]})`);
            }else{
                connection.query(`UPDATE \`profiles\` SET money = money + ${args[3]} WHERE \`user\` = '${args[2]}' AND \`server\` = '${args[1]}'`);
                send_action(message.guild.id, `<@${message.author.id}> –¥–æ–±–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${args[2]} ${args[3]} dp. (MONEY: ${+result[0].money + +args[3]})`);
            }
            await message.reply(`**–¥–æ–±–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <@${args[2]}> ${args[3]} ‚ÇØ**`);
            return message.delete();
        });
    }

    if (message.content.startsWith('/pay')){
        if (mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/pay', ['user', '—Å—É–º–º–∞'], ['mention_user', 'plus_number'])) return
        const args = message.content.slice(`/pay`).split(/ +/);
        let user = message.guild.member(message.mentions.users.first());
        if (args[2] < 0.01){
            await message.reply(`\`–Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –º–µ–Ω–µ–µ 0.01 dp! –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /pay [user] [—Å—É–º–º–∞]\``).then(msg => msg.delete(12000));
            return message.delete();
        }
        connection.query(`SELECT * FROM \`profiles\` WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`, async (error, result, packets) => {
            if (error) return console.error(error);
            if (result.length > 1){
                await message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`);
                const embed = new Discord.RichEmbed();
                embed.setDescription(`**${message.member}, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ—Å—Ç–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –≤ –Ω–∞—à–µ–º [—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ](https://robo-hamster.ru/index.php?forums/%D0%A2%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB.5/). –ö–æ–¥ –æ—à–∏–±–∫–∏: #1**`);
                message.member.send(embed);
                return message.delete();
            }else if (result.length < 1){
                await message.reply(`**\`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–≤–µ—Ä–µ—à–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–∏.\`**`);
                return message.delete();
            }
            if (result[0].money - args[2] < 0){
                await message.reply(`**\`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–≤–µ—Ä–µ—à–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–∏.\`**`);
                return message.delete();
            }
            connection.query(`SELECT * FROM \`profiles\` WHERE \`user\` = '${user.id}' AND \`server\` = '${message.guild.id}'`, async (error, answer, packets) => {
                if (error) return console.error(error);
                if (answer.length > 1){
                    await message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`);
                    const embed = new Discord.RichEmbed();
                    embed.setDescription(`**${message.member}, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ—Å—Ç–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –≤ –Ω–∞—à–µ–º [—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ](https://robo-hamster.ru/index.php?forums/%D0%A2%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB.5/). –ö–æ–¥ –æ—à–∏–±–∫–∏: #2**`);
                    message.member.send(embed);
                    return message.delete();
                }
                if (answer.length != 1){
                    connection.query(`UPDATE \`profiles\` SET money = money - ${+args[2]} WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`);
                    connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${message.guild.id}', '${user.id}', '${+args[2]}')`);
                    send_action(message.guild.id, `<@${message.author.id}> –ø–µ—Ä–µ–≤–µ–ª ${+args[2]} dp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <@${user.id}> (${+result[0].money - +args[2]}-${+args[2]})`);
                    send_action(message.guild.id, `<@${user.id}> –ø–æ–ª—É—á–∏–ª –æ—Ç <@${message.author.id}> | ${+args[2]} dp (0-${+answer[0].money + +args[2]})`);
                    await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ ${args[2]} dp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\` ${user}**`);
                    return message.delete();
                }else{
                    connection.query(`UPDATE \`profiles\` SET money = money - ${+args[2]} WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`);
                    connection.query(`UPDATE \`profiles\` SET money = money + ${+args[2]} WHERE \`user\` = '${user.id}' AND \`server\` = '${message.guild.id}'`);
                    send_action(message.guild.id, `<@${message.author.id}> –ø–µ—Ä–µ–≤–µ–ª ${+args[2]} dp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <@${user.id}> (${+result[0].money - +args[2]}-${+answer[0].money + +args[2]})`);
                    send_action(message.guild.id, `<@${user.id}> –ø–æ–ª—É—á–∏–ª –æ—Ç <@${message.author.id}> | ${+args[2]} dp (${+answer[0].money}-${+answer[0].money + +args[2]})`);
                    await message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ ${args[2]} dp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\` ${user}**`);
                    return message.delete();
                }
            });
        });
    }

    if (message.content.startsWith('/balance')){
        if (mysql_load(message, mysql_cooldown)) return
        let user = message.guild.member(message.mentions.users.first());
        if (!user){
            connection.query(`SELECT * FROM \`profiles\` WHERE \`user\` = '${message.author.id}' AND \`server\` = '${message.guild.id}'`, async (error, result, packets) => {
                if (error) return console.error(error);
                if (result.length > 1){
                    await message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`);
                    const embed = new Discord.RichEmbed();
                    embed.setDescription(`**${message.member}, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ—Å—Ç–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –≤ –Ω–∞—à–µ–º [—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ](https://robo-hamster.ru/index.php?forums/%D0%A2%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB.5/). –ö–æ–¥ –æ—à–∏–±–∫–∏: #3**`);
                    await message.member.send(embed);
                    return message.delete();
                }
                if (result.length == 0){
                    send_action(message.guild.id, `<@${message.author.id}> –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª —Å–≤–æ–π –±–∞–ª–∞–Ω—Å (MONEY: 0)`);
                    await message.reply(`**–≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 0 ‚ÇØ**`);
                    return message.delete();
                }else{
                    send_action(message.guild.id, `<@${message.author.id}> –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª —Å–≤–æ–π –±–∞–ª–∞–Ω—Å (MONEY: ${result[0].money})`);
                    await message.reply(`**–≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${result[0].money} ‚ÇØ**`);
                    return message.delete();
                }
            });
        }else{
            if (!message.member.hasPermission("MANAGE_ROLES")){
                await message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.\`**`).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`SELECT * FROM \`profiles\` WHERE \`user\` = '${user.id}' AND \`server\` = '${message.guild.id}'`, async (error, result, packets) => {
                if (error) return console.error(error);
                if (result.length > 1){
                    await message.reply(`**\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\`**`);
                    const embed = new Discord.RichEmbed();
                    embed.setDescription(`**${message.member}, –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ—Å—Ç–∞–≤—å—Ç–µ –∂–∞–ª–æ–±—É –≤ –Ω–∞—à–µ–º [—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ](https://robo-hamster.ru/index.php?forums/%D0%A2%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB.5/). –ö–æ–¥ –æ—à–∏–±–∫–∏: #4**`);
                    await message.member.send(embed);
                    return message.delete();
                }
                if (result.length == 0){
                    send_action(message.guild.id, `<@${message.author.id}> –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@${user.id}> (MONEY: 0)`);
                    await message.reply(`**–±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 0 ‚ÇØ**`);
                    return message.delete();
                }else{
                    send_action(message.guild.id, `<@${message.author.id}> –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@${user.id}> (MONEY: ${result[0].money})`);
                    await message.reply(`**–±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${result[0].money} ‚ÇØ**`);
                    return message.delete();
                }
            });
        }
    }

    // –†–∞–±–æ—Ç–∞ —Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è–º–∏
    if (message.content.startsWith('/storage_description')){
        if (mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/storage_description', ['–æ–ø–∏—Å–∞–Ω–∏–µ'], ['none'])) return
        const args = message.content.slice(`/storage_description`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(message);
            if (storage.length == 0){
                message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                if (storage[0].status == false){
                    message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                const description = args.slice(1).join(' ');
                connection.query(`UPDATE \`storage\` SET description = '${description}' WHERE \`id\` = '${storage[0].id}'`);
                message.reply(`**\`–æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                send_action(message.guild.id, `<@${message.author.id}> –∏–∑–º–µ–Ω–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storge[0].name}`);
                return message.delete();
            }else{
                if (!isNumeric(args[1])){
                    message.reply(`**\`—É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: /storage_description [–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ] [–æ–ø–∏—Å–∞–Ω–∏–µ]\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(message);
                    if (storage.length == 0){
                        message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].status == false){
                            message.reply(`**\`–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä—ã—Ç–æ.\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        const description = args.slice(2).join(' ');
                        connection.query(`UPDATE \`storage\` SET description = '${description}' WHERE \`id\` = '${storage[0].id}'`);
                        message.reply(`**\`–æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `<@${message.author.id}> –∏–∑–º–µ–Ω–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storge[0].name}`);
                        return message.delete();
                    }else{
                        return error_mysql(message);
                    }
                });
            }
        });
    }

    if (message.content.startsWith('/storage_status')){
        if (mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/storage_status', ['—Å–æ—Å—Ç–æ—è–Ω–∏–µ (1/0)'], ['none'])) return
        const args = message.content.slice(`/storage_status`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(message);
            if (storage.length == 0){
                message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                if (uses(message, '/storage_status', ['—Å–æ—Å—Ç–æ—è–Ω–∏–µ (1/0)'], ['status'])) return
                if (storage[0].money < storage[0].nalog){
                    message.reply(`**\`–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`storage\` SET status = '${args[1]}' WHERE \`id\` = '${storage[0].id}'`);
                message.reply(`**\`—Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                send_action(message.guild.id, `<@${message.author.id}> –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storge[0].name}`);
                return message.delete();
            }else{
                if (uses(message, '/storage_status', ['–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', '—Å–æ—Å—Ç–æ—è–Ω–∏–µ (1/0)'], ['number', 'status'])) return
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(message);
                    if (storage.length == 0){
                        message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].money < storage[0].nalog){
                            message.reply(`**\`–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(12000));
                            return message.delete();
                        }
                        connection.query(`UPDATE \`storage\` SET status = '${args[2]}' WHERE \`id\` = '${storage[0].id}'`);
                        message.reply(`**\`—Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `<@${message.author.id}> –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storge[0].name}`);
                        return message.delete();
                    }else{
                        return error_mysql(message);
                    }
                });
            }
        });
    }

    if (message.content.startsWith('/storage_cost')){
        if (mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/storage_cost', ['—Å—É–º–º–∞'], ['none'])) return
        const args = message.content.slice(`/storage_cost`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(message);
            if (storage.length == 0){
                message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                if (uses(message, '/storage_cost', ['—Å—É–º–º–∞'], ['plus_number'])) return
                if (storage[0].money < storage[0].nalog){
                    message.reply(`**\`–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                if (storage[0].cost < storage[0].min_cost){
                    message.reply(`**\`—Ä–∞–∑—Ä–µ—à–µ–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å—É–º–º—É –æ—Ç ${storage[0].min_cost} discord points!\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`storage\` SET cost = '${args[1]}' WHERE \`id\` = '${storage[0].id}'`);
                message.reply(`**\`—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–∞ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!\`**`).then(msg => msg.delete(10000));
                send_action(message.guild.id, `<@${message.author.id}> –∏–∑–º–µ–Ω–∏–ª —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ c ${storage[0].cost} –Ω–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storge[0].name}`);
                return message.delete();
            }else{
                if (uses(message, '/storage_cost', ['–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', '—Å—É–º–º–∞'], ['number', 'plus_number'])) return
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(message);
                    if (storage.length == 0){
                        message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].money < storage[0].nalog){
                            message.reply(`**\`–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(12000));
                            return message.delete();
                        }
                        if (storage[0].cost < storage[0].min_cost){
                            message.reply(`**\`—Ä–∞–∑—Ä–µ—à–µ–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å—É–º–º—É –æ—Ç ${storage[0].min_cost} discord points!\`**`).then(msg => msg.delete(12000));
                            return message.delete();    
                        }
                        connection.query(`UPDATE \`storage\` SET cost = '${args[2]}' WHERE \`id\` = '${storage[0].id}'`);
                        message.reply(`**\`—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–∞ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `<@${message.author.id}> –∏–∑–º–µ–Ω–∏–ª —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ c ${storage[0].cost} –Ω–∞ ${args[2]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storge[0].name}`);
                        return message.delete();
                    }else{
                        return error_mysql(message);
                    }
                });
            }
        });
    }

    if (message.content.startsWith('/storage_add')){
        if (mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/storage_add', ['—Å—É–º–º–∞'], ['none'])) return
        const args = message.content.slice(`/storage_add`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(message);
            if (storage.length == 0){
                message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                if (uses(message, '/storage_add', ['—Å—É–º–º–∞'], ['plus_number'])) return
                connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                    if (error) return error_mysql(message);
                    if (profile > 1) return error_mysql(message);
                    if (profile == 1){
                        if (+profile[0].money < +args[1]){
                            message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        connection.query(`UPDATE \`storage\` SET money = money + ${args[1]} WHERE \`id\` = '${storage[0].id}'`);
                        connection.query(`UPDATE \`profiles\` SET money = money - ${args[1]} WHERE \`id\` = '${profile[0].id}'`);
                        message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å–∫–ª–∞–¥ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[1]} discord points!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `<@${message.author.id}> –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storge[0].name} (MONEY ST: ${storage[0].money} - ${storage[0].money + +args[1]}) (MONEY PR: ${profile[0].money} - ${profile[0].money - +args[1]})`);
                        return message.delete();
                    }else{
                        message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                        return message.delete();
                    }
                });
            }else{
                if (uses(message, '/storage_add', ['–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', '—Å—É–º–º–∞'], ['number', 'plus_number'])) return
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(message);
                    if (storage.length == 0){
                        message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                            if (error) return error_mysql(message);
                            if (profile > 1) return error_mysql(message);
                            if (profile == 1){
                                if (+profile[0].money < +args[2]){
                                    message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                                    return message.delete();
                                }
                                connection.query(`UPDATE \`storage\` SET money = money + ${args[2]} WHERE \`id\` = '${storage[0].id}'`);
                                connection.query(`UPDATE \`profiles\` SET money = money - ${args[2]} WHERE \`id\` = '${profile[0].id}'`);
                                message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å–∫–ª–∞–¥ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[2]} discord points!\`**`).then(msg => msg.delete(10000));
                                send_action(message.guild.id, `<@${message.author.id}> –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ ${args[2]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—é ${storge[0].name} (MONEY ST: ${storage[0].money} - ${storage[0].money + +args[2]}) (MONEY PR: ${profile[0].money} - ${profile[0].money - +args[2]})`);
                                return message.delete();
                            }else{
                                message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                                return message.delete();
                            }
                        });
                    }else{
                        return error_mysql(message);
                    }
                });
            }
        });
    }

    if (message.content.startsWith('/storage_get')){
        if (mysql_load(message, mysql_cooldown)) return
        if (uses(message, '/storage_get', ['—Å—É–º–º–∞'], ['none'])) return
        const args = message.content.slice(`/storage_get`).split(/ +/);
        connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id}'`, async (error, storage) => {
            if (error) return error_mysql(message);
            if (storage.length == 0){
                message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ!\`**`).then(msg => msg.delete(18000));
                return message.delete();
            }else if (storage.length == 1){
                if (uses(message, '/storage_get', ['—Å—É–º–º–∞'], ['plus_number'])) return
                if (storage[0].money < args[1]){
                    message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                    return message.delete();
                }
                connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                    if (error) return error_mysql(message);
                    if (profile > 1) return error_mysql(message);
                    if (profile == 1){
                        connection.query(`UPDATE \`storage\` SET money = money - ${args[1]} WHERE \`id\` = '${storage[0].id}'`);
                        connection.query(`UPDATE \`profiles\` SET money = money + ${args[1]} WHERE \`id\` = '${profile[0].id}'`);
                        message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[1]} discord points!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `<@${message.author.id}> —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${storge[0].name} (MONEY ST: ${storage[0].money} - ${storage[0].money - +args[1]}) (MONEY PR: ${profile[0].money} - ${profile[0].money + +args[1]})`);
                        return message.delete();
                    }else{
                        connection.query(`UPDATE \`storage\` SET money = money - ${args[1]} WHERE \`id\` = '${storage[0].id}'`);
                        connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${message.guild.id}', '${message.author.id}', '${args[1]}')`);
                        message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[1]} discord points!\`**`).then(msg => msg.delete(10000));
                        send_action(message.guild.id, `<@${message.author.id}> —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[1]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${storge[0].name} (MONEY ST: ${storage[0].money} - ${storage[0].money - +args[1]}) (MONEY PR: ${profile[0].money} - ${profile[0].money + +args[1]})`);
                        return message.delete();
                    }
                });
            }else{
                if (uses(message, '/storage_get', ['–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', '—Å—É–º–º–∞'], ['number', 'plus_number'])) return
                connection.query(`SELECT * FROM \`storage\` WHERE \`server\` = '${message.guild.id}' AND \`owner\` = '${message.author.id} AND \`id\` = '${args[1]}'`, async (error, storage) => {
                    if (error) return error_mysql(message);
                    if (storage.length == 0){
                        message.reply(`**\`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è!\`**`).then(msg => msg.delete(18000));
                        return message.delete();
                    }else if (storage.length == 1){
                        if (storage[0].money < args[2]){
                            message.reply(`**\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\`**`).then(msg => msg.delete(10000));
                            return message.delete();
                        }
                        connection.query(`SELECT * FROM \`profiles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (error, profile) => {
                            if (error) return error_mysql(message);
                            if (profile > 1) return error_mysql(message);
                            if (profile == 1){
                                connection.query(`UPDATE \`storage\` SET money = money - ${args[2]} WHERE \`id\` = '${storage[0].id}'`);
                                connection.query(`UPDATE \`profiles\` SET money = money + ${args[2]} WHERE \`id\` = '${profile[0].id}'`);
                                message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[2]} discord points!\`**`).then(msg => msg.delete(10000));
                                send_action(message.guild.id, `<@${message.author.id}> —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[2]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${storge[0].name} (MONEY ST: ${storage[0].money} - ${storage[0].money - +args[2]}) (MONEY PR: ${profile[0].money} - ${profile[0].money + +args[2]})`);
                                return message.delete();
                            }else{
                                connection.query(`UPDATE \`storage\` SET money = money - ${args[2]} WHERE \`id\` = '${storage[0].id}'`);
                                connection.query(`INSERT INTO \`profiles\` (\`server\`, \`user\`, \`money\`) VALUES ('${message.guild.id}', '${message.author.id}', '${args[2]}')`);
                                message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${args[2]} discord points!\`**`).then(msg => msg.delete(10000));
                                send_action(message.guild.id, `<@${message.author.id}> —Å–Ω—è–ª —Å–æ —Å—á–µ—Ç–∞ ${args[2]} ‚Äî –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ${storge[0].name} (MONEY ST: ${storage[0].money} - ${storage[0].money - +args[2]}) (MONEY PR: ${profile[0].money} - ${profile[0].money + +args[2]})`);
                                return message.delete();
                            }
                        });
                    }else{
                        return error_mysql(message);
                    }
                });
            }
        });
    }

    if (message.content.startsWith('/bizinfo')){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/bizinfo`).split(/ +/);
        if (!args[1]){
            connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`owner\` = '${message.author.id}'`, async (err, result, fields) => {
                if (result.length > 1){
                    message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /bizinfo [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\``);
                    return message.delete();
                }
                if (result.length < 1){
                    message.reply(`\`–∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –Ω–∞–π—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ –≤–∞—à–µ!\``).then(msg => msg.delete(12000));
                    return message.delete();
                }
                const embed = new Discord.RichEmbed();
                embed.setTitle(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ ${result[0].name} [ID: ${result[0].id}]`);
                embed.setColor('#FF0000');
                embed.addField(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è`, `**–í–ª–∞–¥–µ–ª–µ—Ü: <@${result[0].owner}>\n–û–ø–∏—Å–∞–Ω–∏–µ: ${result[0].description}**`);
                embed.addField(`–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ`, `**–°—Ç–∞—Ç—É—Å –∑–∞–≤–µ–¥–µ–Ω–∏—è: ${result[0].status}\n–ü—Ä–æ–¥–∞–≤–∞–µ–º—ã–π —Ç–æ–≤–∞—Ä: ${result[0].name}\n–¶–µ–Ω–∞ –∑–∞ 1 —à—Ç—É–∫—É: ${result[0].cost} ‚ÇØ\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞: ${result[0].amount}\n–î–µ–Ω–µ–≥ –≤ –º–∞–≥–∞–∑–∏–Ω–µ: ${result[0].money} ‚ÇØ**`);
                embed.addField(`–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–ª–∞–¥–µ`, `**–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ: ${result[0].storage}\n–¶–µ–Ω–∞ –∑–∞ 1 —à—Ç—É–∫—É: ${result[0].storage_cost} ‚ÇØ**`);
                embed.setFooter(`¬© –°opyright 2019`);
                message.reply(embed);
                return message.delete();
            });
        }else{
            let name = args.slice(1).join(' ');
            connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`owner\` = '${message.author.id}' AND \`name\` = '${name}'`, async (err, result, fields) => {
                if (result.length < 1 || result.length > 1){
                    message.reply(`\`–∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –Ω–∞–π—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ –≤–∞—à–µ!\``).then(msg => msg.delete(12000));
                    return message.delete();
                }
                const embed = new Discord.RichEmbed();
                embed.setTitle(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ ${result[0].name} [ID: ${result[0].id}]`);
                embed.setColor('#FF0000');
                embed.addField(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è`, `**–í–ª–∞–¥–µ–ª–µ—Ü: <@${result[0].owner}>\n–û–ø–∏—Å–∞–Ω–∏–µ: ${result[0].description}**`);
                embed.addField(`–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ`, `**–°—Ç–∞—Ç—É—Å –∑–∞–≤–µ–¥–µ–Ω–∏—è: ${result[0].status}\n–ü—Ä–æ–¥–∞–≤–∞–µ–º—ã–π —Ç–æ–≤–∞—Ä: ${result[0].name}\n–¶–µ–Ω–∞ –∑–∞ 1 —à—Ç—É–∫—É: ${result[0].cost} ‚ÇØ\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞: ${result[0].amount}\n–î–µ–Ω–µ–≥ –≤ –º–∞–≥–∞–∑–∏–Ω–µ: ${result[0].money} ‚ÇØ**`);
                embed.addField(`–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–ª–∞–¥–µ`, `**–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ: ${result[0].storage}\n–¶–µ–Ω–∞ –∑–∞ 1 —à—Ç—É–∫—É: ${result[0].storage_cost} ‚ÇØ**`);
                embed.setFooter(`¬© –°opyright 2019`);
                message.reply(embed);
                return message.delete();
            });
        }
    }

    if (message.content.startsWith("/change_status")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/change_status`).split(/ +/);
        if (!args[1] || !args[2]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /change_status [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [–æ—Ç–∫—Ä—ã—Ç–æ/–∑–∞–∫—Ä—ã—Ç–æ]\``);
            return message.delete();
        }
        if (!['–æ—Ç–∫—Ä—ã—Ç–æ', '–∑–∞–∫—Ä—ã—Ç–æ'].includes(args[2])){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /change_status [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [–æ—Ç–∫—Ä—ã—Ç–æ/–∑–∞–∫—Ä—ã—Ç–æ]\``);
            return message.delete();
        }
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`, async (err, result, fields) => {
            if (result.length < 1 || result.length > 1){
                message.reply(`\`—Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤–∞—à!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (result[0].status == args[2]){
                message.reply(`\`–º–∞–≥–∞–∑–∏–Ω –∏ —Ç–∞–∫ –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å: ${args[2]}!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`UPDATE \`buy_dashboard\` SET status = '${args[2]}' WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`);
            message.reply(`\`–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –º–∞–≥–∞–∑–∏–Ω—É —Å—Ç–∞—Ç—É—Å!\``).then(msg => msg.delete(12000));
            return message.delete();
        });
    }

    if (message.content.startsWith("/change_cost")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/change_cost`).split(/ +/);
        if (!args[1]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /change_cost [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [—Å—É–º–º–∞]\``);
            return message.delete();
        }
        if (!args[2]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /change_cost [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [—Å—É–º–º–∞]\``);
            return message.delete();
        }
        if (typeof (+args[2]) != "number" || +args[2] <= 0){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /change_cost [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [—Å—É–º–º–∞]\``);
            return message.delete();
        }
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`, async (err, result, fields) => {
            if (result.length < 1 || result.length > 1){
                message.reply(`\`–∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ –≤–∞—à–µ!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`UPDATE \`buy_dashboard\` SET cost = ${args[2]} WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`);
            message.reply(`**–∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –¢–µ–ø–µ—Ä—å —Ç–æ–≤–∞—Ä —Å—Ç–æ–∏—Ç ${args[2]} ‚ÇØ**`);
            return message.delete();
        });
    }

    if (message.content.startsWith("/get_money")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/get_money`).split(/ +/);
        if (!args[1]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_money [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [—Å—É–º–º–∞]\``);
            return message.delete();
        }
        if (!args[2]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_money [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [—Å—É–º–º–∞]\``);
            return message.delete();
        }
        if (typeof (+args[2]) != "number" || +args[2] <= 0){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_money [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [—Å—É–º–º–∞]\``);
            return message.delete();
        }
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`, async (err, result, fields) => {
            if (result.length < 1 || result.length > 1){
                message.reply(`\`–∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ –≤–∞—à–µ!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (result[0].status != '–∑–∞–∫—Ä—ã—Ç–æ'){
                message.reply(`\`–º–∞–≥–∞–∑–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–∫—Ä—ã—Ç!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (args[2] > result[0].money){
                message.reply(`\`–≤ –º–∞–≥–∞–∑–∏–Ω–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–Ω—è—Ç–∏—è!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`SELECT \`id\`, \`userid\`, \`points\` FROM \`accounts\` WHERE \`userid\` = '${message.author.id}'`, async (error, result, packets) => {
                if (error) return console.error(error);
                if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
                if (result.length == 0){
                    connection.query(`INSERT INTO \`accounts\` (\`userid\`, \`points\`) VALUES ('${message.author.id}', '${args[2]}')`);
                    connection.query(`UPDATE \`buy_dashboard\` SET money = money - ${+args[2]} WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`);
                    message.reply(`**–≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –º–∞–≥–∞–∑–∏–Ω–∞ ${args[2]} ‚ÇØ**`);
                    return message.delete();
                }else{
                    connection.query(`UPDATE \`accounts\` SET points = points + ${+args[2]} WHERE \`userid\` = '${message.author.id}'`);
                    connection.query(`UPDATE \`buy_dashboard\` SET money = money - ${+args[2]} WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`);
                    message.reply(`**–≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ —Å –º–∞–≥–∞–∑–∏–Ω–∞ ${args[2]} ‚ÇØ**`);
                    return message.delete();
                }
            });
        });
    }

    if (message.content.startsWith("/add_money")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/add_money`).split(/ +/);
        if (!args[1]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_money [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [—Å—É–º–º–∞]\``);
            return message.delete();
        }
        if (!args[2]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_money [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [—Å—É–º–º–∞]\``);
            return message.delete();
        }
        if (typeof (+args[2]) != "number" || +args[2] <= 0){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_money [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [—Å—É–º–º–∞]\``);
            return message.delete();
        }
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`, async (err, result, fields) => {
            if (result.length < 1 || result.length > 1){
                message.reply(`\`–∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ –≤–∞—à–µ!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (result[0].status != '–∑–∞–∫—Ä—ã—Ç–æ'){
                message.reply(`\`–º–∞–≥–∞–∑–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–∫—Ä—ã—Ç!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`SELECT * FROM \`accounts\` WHERE \`userid\` = '${message.author.id}'`, async (error, result, packets) => {
                if (error) return console.error(error);
                if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
                if (result.length == 0){
                    message.reply(`\`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å—É–º–º—É, –±–æ–ª–µ–µ —á–µ–º —É –≤–∞—Å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ!\``).then(msg => msg.delete(12000));
                    return message.delete();
                }else if (result[0].points < args[2]){
                    message.reply(`\`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å—É–º–º—É, –±–æ–ª–µ–µ —á–µ–º —É –≤–∞—Å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ!\``).then(msg => msg.delete(12000));
                    return message.delete();
                }
                connection.query(`UPDATE \`accounts\` SET points = points - ${+args[2]} WHERE \`userid\` = '${message.author.id}'`);
                connection.query(`UPDATE \`buy_dashboard\` SET money = money + ${+args[2]} WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`);
                message.reply(`**–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –≤ –º–∞–≥–∞–∑–∏–Ω ${args[2]} ‚ÇØ**`);
                return message.delete();
            });
        });
    }

    if (message.content.startsWith("/buy_amount")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/buy_amount`).split(/ +/);
        if (!args[1]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /buy_amount [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [–∫–æ–ª-–≤–æ]\``);
            return message.delete();
        }
        if (!args[2]){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /buy_amount [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [–∫–æ–ª-–≤–æ]\``);
            return message.delete();
        }
        if (!isInteger(+args[2]) || +args[2] <= 0){
            message.reply(`\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /buy_amount [–Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è] [–∫–æ–ª-–≤–æ]\``);
            return message.delete();
        }
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`, async (err, result, fields) => {
            if (result.length < 1 || result.length > 1){
                message.reply(`\`–∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ –≤–∞—à–µ!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (args[2] > result[0].storage){
                message.reply(`\`–Ω–∞ —Å–∫–ª–∞–¥–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è! [storage: ${result[0].storage}]\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            let cost = args[2] * result[0].storage_cost;
            if (cost > result[0].money){
                message.reply(`\`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤! [money: ${result[0].money}]\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`UPDATE \`buy_dashboard\` SET money = money - ${+cost} WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`);
            connection.query(`UPDATE \`buy_dashboard\` SET storage = storage - ${+args[2]} WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`);
            connection.query(`UPDATE \`buy_dashboard\` SET amount = amount + ${+args[2]} WHERE \`owner\` = '${message.author.id}' AND \`id\` = '${args[1]}'`);
            message.reply(`\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞!\``).then(msg => msg.delete(12000));
            return message.delete();
        });
    }

    if (message.content.startsWith("/get_market")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/get_market`).split(/ +/);
        if (!args[1]){
            message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /get_market [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\`**`);
            return message.delete();
        }
        const name = args.slice(1).join(' ');
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`name\` = '${name}'`, async (err_mag, result_mag, fields_mag) => {
            if (result_mag.length < 1 || result_mag.length > 1){
                message.reply(`\`—Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (result_mag[0].status == '–∑–∞–∫—Ä—ã—Ç–æ'){
                message.reply(`\`–º–∞–≥–∞–∑–∏–Ω –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫—Ä—ã—Ç –≤–ª–∞–¥–µ–ª—å—Ü–µ–º!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            message.reply(`**\`–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ${result_mag[0].name}, –æ–ø–∏—Å–∞–Ω–∏–µ: ${result_mag[0].description}, —Å—Ç–æ–∏–º–æ—Å—Ç—å 1 —à—Ç—É–∫–∏: ${result_mag[0].cost}, –≤ –Ω–∞–ª–∏—á–∏–∏: ${result_mag[0].amount}\`**`);
            return message.delete();
        });
    }

    if (message.content.startsWith("/buy_market")){
        if (mysql_cooldown.has(message.author.id)){
            message.reply(`**\`–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥!\`**`).then(msg => msg.delete(7000));
            return message.delete();
        }
        mysql_cooldown.add(message.author.id);
        setTimeout(() => {
            if (mysql_cooldown.has(message.author.id)) mysql_cooldown.delete(message.author.id)
        }, 8000);
        const args = message.content.slice(`/buy_market`).split(/ +/);
        if (!args[1]){
            message.reply(`**\`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /buy_market [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞]\`**`);
            return message.delete();
        }
        const name = args.slice(1).join(' ');
        connection.query(`SELECT * FROM \`buy_dashboard\` WHERE \`name\` = '${name}'`, async (err_mag, result_mag, fields_mag) => {
            if (result_mag.length < 1 || result_mag.length > 1){
                message.reply(`\`—Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (result_mag[0].status == '–∑–∞–∫—Ä—ã—Ç–æ'){
                message.reply(`\`–º–∞–≥–∞–∑–∏–Ω –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫—Ä—ã—Ç –≤–ª–∞–¥–µ–ª—å—Ü–µ–º!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            if (result_mag[0].amount <= 0){
                message.reply(`\`—Ç–æ–≤–∞—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –µ–≥–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏!\``).then(msg => msg.delete(12000));
                return message.delete();
            }
            connection.query(`SELECT * FROM \`accounts\` WHERE \`userid\` = '${message.author.id}'`, async (error, result, packets) => {
                if (error) return console.error(error);
                if (result.length > 1) return console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–Ω–æ–≥–æ, error code: [#351]`);
                if (result.length == 0){
                    message.reply(`**\`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                if (result[0].points < result_mag[0].cost){
                    message.reply(`**\`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
                var answer = eval('(function() {\n' + result_mag[0].code + '\n}())');
                if (answer == '1'){
                    connection.query(`UPDATE \`accounts\` SET points = points - ${+result_mag[0].cost} WHERE \`userid\` = '${message.author.id}'`);
                    connection.query(`UPDATE \`buy_dashboard\` SET money = money + ${+result_mag[0].cost} WHERE \`name\` = '${name}'`);
                    connection.query(`UPDATE \`buy_dashboard\` SET amount = amount - 1 WHERE \`name\` = '${name}'`);
                    message.reply(`**\`–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ —Ç–æ–≤–∞—Ä! [${name}]\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }else{
                    message.reply(`**\`–æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏! [${name}]\`**`).then(msg => msg.delete(12000));
                    return message.delete();
                }
            });
        });
    }
}
