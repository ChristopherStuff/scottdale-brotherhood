const Discord = require('discord.js');
const fs = require("fs");

function endsWithAny(suffixes, string) {
    return suffixes.some(function (suffix) {
        return string.endsWith(suffix);
    });
}

function time(s) {
    let ms = s % 1000;
    s = (s - ms) / 1000;
    let secs = s % 60;
    s = (s - secs) / 60;
    let mins = s % 60;
    s = (s - mins) / 60;
    let hrs = s % 24;
    s = (s - hrs) / 24;
    let days = s;
    let status = true;
    let output = '';

    if (days != 0){
        if (days.toString().endsWith('1') && !days.toString().endsWith('11')){
            output += days + ' –¥–µ–Ω—å';
        }else if (endsWithAny(['2', '3', '4'], days.toString()) && !endsWithAny(['12', '13', '14'], days.toString())){
            output += days + ' –¥–Ω—è';
        }else{
            output += days + ' –¥–Ω–µ–π';
        }
        status = false;
    }
    if (hrs != 0){
        if (status){
            if (hrs.toString().endsWith('1') && !hrs.toString().endsWith('11')){
                output += hrs + ' —á–∞—Å';
            }else if (endsWithAny(['2', '3', '4'], hrs.toString()) && !endsWithAny(['12', '13', '14'], hrs.toString())){
                output += hrs + ' —á–∞—Å–∞';
            }else{
                output += hrs + ' —á–∞—Å–æ–≤';
            }
            status = false;
        }
    }
    if (mins != 0){
        if (status){
            if (mins.toString().endsWith('1') && !mins.toString().endsWith('11')){
                output += mins + ' –º–∏–Ω—É—Ç—É';
            }else if (endsWithAny(['2', '3', '4'], mins.toString()) && !endsWithAny(['12', '13', '14'], mins.toString())){
                output += mins + ' –º–∏–Ω—É—Ç—ã';
            }else{
                output += mins + ' –º–∏–Ω—É—Ç';
            }
            status = false;
        }
    }
    if (secs != 0){
        if (status){
            if (secs.toString().endsWith('1') && !secs.toString().endsWith('11')){
                output += secs + ' —Å–µ–∫—É–Ω–¥—É';
            }else if (endsWithAny(['2', '3', '4'], secs.toString()) && !endsWithAny(['12', '13', '14'], secs.toString())){
                output += secs + ' —Å–µ–∫—É–Ω–¥—ã';
            }else{
                output += secs + ' —Å–µ–∫—É–Ω–¥';
            }
            status = false;
        }
    }
    if (ms != 0){
        if (status){
            output += ms + ' ms';
        }
    }
    return output;
}

exports.run = async (bot, connection, message, tags, rolesgg, canremoverole, manytags, sened, snyatie) => {

    if (message.content.startsWith('/remove_blacklist')){
        if (!message.member.hasPermission("MANAGE_ROLES")){
            message.reply(`\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!\``).then(msg => msg.delete(7000));
            return message.delete();
        }
        const args = message.content.slice('/remove_blacklist').split(/ +/);
        if (!args[1]){
            message.reply(`\`—É–∫–∞–∂–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º! '/remove_blacklist [name]'\``).then(msg => msg.delete(12000));
            return message.delete();
        }
        let name = args.slice(1).join(" ").toLowerCase();
        connection.query(`SELECT * FROM \`blacklist_names\` WHERE \`name\` = '${name}' AND \`server\` = '${message.guild.id}'`, async (err, names) => {
            if (names.length == 0){
                message.reply(`\`–¥–∞–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –≤ —á—Å!\``).then(msg => msg.delete(7000));
                return message.delete();
            }else{
                connection.query(`UPDATE \`blacklist_names\` SET \`blacklisted\` = '0' WHERE \`server\` = '${message.guild.id}' AND \`name\` = '${name}'`);
                message.reply(`\`–∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å blacklist –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω! [${name}]\``);
                message.delete();
                connection.query(`SELECT * FROM \`requests-for-roles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${names[0].user}'`, async (err, users) => {
                    if (users.length > 0){
                        if (new Date(`${users[0].remove_role}`).valueOf() != '-30610224000000'){
                            connection.query(`UPDATE \`requests-for-roles\` SET \`blacklisted\` = '1000-01-01 00:00:00' WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${names[0].user}'`);
                            message.reply(`\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\` <@${names[0].user}> \`–±—ã–ª —Å–Ω—è—Ç —Å—Ç–∞—Ç—É—Å —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.\``);
                        }else{
                            connection.query(`DELETE FROM \`requests-for-roles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${names[0].user}'`);
                            message.reply(`\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\` <@${names[0].user}> \`–±—ã–ª —É–¥–∞–ª–µ–Ω —Å—Ç–∞—Ç—É—Å —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.\``);
                        }
                    }
                });
            }
        });
    }

    if (message.content.startsWith('/remove_accepted')){
        if (!message.member.hasPermission("MANAGE_ROLES")){
            message.reply(`\`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!\``).then(msg => msg.delete(7000));
            return message.delete();
        }
        let user = message.guild.member(message.mentions.members.first());
        if (!user){
            message.reply(`\`—É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! '/remove_accepted [user]'\``).then(msg => msg.delete(12000));
            return message.delete();
        }
        connection.query(`SELECT * FROM \`requests-for-roles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${user.id}'`, async (err, users) => {
            if (users.length > 0){
                if (new Date(`${users[0].blacklisted}`).valueOf() != '-30610224000000'){
                    connection.query(`UPDATE \`requests-for-roles\` SET \`remove_role\` = '1000-01-01 00:00:00', \`staff\` = '' WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${user.id}'`);
                    message.reply(`\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\` ${user} \`–±—ã–ª —Å–Ω—è—Ç —Å—Ç–∞—Ç—É—Å —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏.\``);
                    return message.delete();
                }else{
                    connection.query(`DELETE FROM \`requests-for-roles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${user.id}'`);
                    message.reply(`\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\` ${user} \`–±—ã–ª —É–¥–∞–ª–µ–Ω —Å—Ç–∞—Ç—É—Å —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏.\``);
                    return message.delete();
                }
            }else{
                message.reply(`\`–¥–∞–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π!\``).then(msg => msg.delete(7000));
                return message.delete();
            }
        });
    }

    if (message.content.toLowerCase().includes("—Å–Ω–∏–º–∏") || message.content.toLowerCase().includes("—Å–Ω—è—Ç—å")){
        if (!message.member.roles.some(r => canremoverole.includes(r.name)) && !message.member.hasPermission("MANAGE_ROLES")) return
        const args = message.content.split(/ +/)
        let onebe = false;
        let twobe = false;
        args.forEach(word => {
            if (word.toLowerCase().includes(`—Ä–æ–ª—å`)) onebe = true
            if (word.toLowerCase().includes(`—É`)) twobe = true
        })
        if (!onebe || !twobe) return
        if (message.mentions.users.size > 1) return message.react(`üìõ`)
        let user = message.guild.member(message.mentions.users.first());
        if (!user) return message.react(`üìõ`)
        if (snyatie.has(message.author.id + `=>` + user.id)) return message.react(`üïñ`)
        let reqchat = message.guild.channels.find(c => c.name == `requests-for-roles`); // –ù–∞–π—Ç–∏ —á–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
        if(!reqchat){
            message.reply(`\`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –ö–∞–Ω–∞–ª requests-for-roles –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!\``)
            return console.error(`–ö–∞–Ω–∞–ª requests-for-roles –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!`)
        }
        let roleremove = user.roles.find(r => rolesgg.includes(r.name));
        if (!roleremove) return message.react(`üìõ`)

        message.reply(`\`–Ω–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —Å–Ω—è—Ç–∏—è —Ä–æ–ª–∏.\``).then(answer => {
            message.channel.awaitMessages(response => response.member.id == message.member.id, {
                max: 1,
                time: 60000,
                errors: ['time'],
            }).then((collected) => {
                const embed = new Discord.RichEmbed()
                .setTitle("`Discord ¬ª –ó–∞–ø—Ä–æ—Å –æ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏.`")
                .setColor("#483D8B")
                .addField("–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å", `\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\` <@${message.author.id}>`)
                .addField("–ö–æ–º—É —Å–Ω—è—Ç—å —Ä–æ–ª—å", `\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\` <@${user.id}>`)
                .addField("–†–æ–ª—å –¥–ª—è —Å–Ω—è—Ç–∏—è", `\`–†–æ–ª—å –¥–ª—è —Å–Ω—è—Ç–∏—è:\` <@&${roleremove.id}>`)
                .addField("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –∫–∞–Ω–∞–ª–∞", `<#${message.channel.id}>`)
                .addField("–ü—Ä–∏—á–∏–Ω–∞ —Å–Ω—è—Ç–∏—è —Ä–æ–ª–∏", `${collected.first().content}`)
                .addField("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", `\`[‚úî] - —Å–Ω—è—Ç—å —Ä–æ–ª—å\`\n` + `\`[‚ùå] - –æ—Ç–∫–∞–∑–∞—Ç—å –≤ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏\`\n` + `\`[D] - —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\``)
                .setFooter("¬© Support Team | by Kory_McGregor")
                .setTimestamp()
                reqchat.send(embed).then(async msgsen => {
                    answer.delete();
                    collected.first().delete();
                    await msgsen.react('‚úî')
                    await msgsen.react('‚ùå')
                    await msgsen.react('üá©')
                    await msgsen.pin();
                })
                snyatie.add(message.author.id + `=>` + user.id)
                return message.react(`üì®`);
            }).catch(() => {
                return answer.delete()
            });
        });
    }

    if (message.content.toLowerCase().includes("—Ä–æ–ª—å") && !message.content.toLowerCase().includes(`—Å–Ω–∏–º–∏`) && !message.content.toLowerCase().includes(`—Å–Ω—è—Ç—å`)){
        // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –ª–∏ –Ω–∏–∫.
        connection.query(`SELECT * FROM \`blacklist_names\` WHERE \`name\` = '${message.member.displayName.toLowerCase() || message.member.user.tag.toLowerCase()}' AND \`server\` = '${message.guild.id}'`, async (err, names) => {
            if (names.length > 1){
                message.reply(`\`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –∫–æ–¥ –æ—à–∏–±–∫–∏: 521\``);
                return message.delete();
            }
            if (names.length == 1){
                if (names[0].blacklisted == true){
                    if (message.member.roles.some(r=>rolesgg.includes(r.name))) {
                        for (var i in rolesgg){
                            let rolerem = bot.guilds.find(g => g.id == message.guild.id).roles.find(r => r.name == rolesgg[i]);
                            if (message.member.roles.some(role=>[rolesgg[i]].includes(role.name))){
                                await message.member.removeRole(rolerem); // –ó–∞–±—Ä–∞—Ç—å —Ä–æ–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ.
                            }
                        }
                    }
                    let moderator_chat = message.guild.channels.find(c => c.name == 'spectator-chat');
                    if (moderator_chat) moderator_chat.send(`${message.member} \`–ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å. –û—Ç–≤–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã: BLACKLISTED\`\n\`[DEBUG]\` \`${names[0].name} - ${names[0].blacklisted} - ${names[0].moderator} - ${names[0].time_add}\``);
                    return message.react(`üìõ`);
                }
            }
            // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—ç–≥–∏
            connection.query(`SELECT * FROM \`requests-for-roles\` WHERE \`server\` = '${message.guild.id}' AND \`user\` = '${message.author.id}'`, async (err, users) => {
                for (var i in manytags){
                    if (message.member.displayName.toLowerCase().includes("[" + manytags[i].toLowerCase()) || message.member.displayName.toLowerCase().includes(manytags[i].toLowerCase() + "]") || message.member.displayName.toLowerCase().includes("(" + manytags[i].toLowerCase()) || message.member.displayName.toLowerCase().includes(manytags[i].toLowerCase() + ")") || message.member.displayName.toLowerCase().includes("{" + manytags[i].toLowerCase()) || message.member.displayName.toLowerCase().includes(manytags[i].toLowerCase() + "}")){
                        let rolename = tags[manytags[i].toUpperCase()] // –£–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é —Å —Ç—ç–≥–æ–º
                        let role = message.guild.roles.find(r => r.name == rolename); // –ù–∞–π—Ç–∏ —ç—Ç—É —Ä–æ–ª—å –Ω–∞ discord —Å–µ—Ä–≤–µ—Ä–µ.
                        let reqchat = message.guild.channels.find(c => c.name == `requests-for-roles`); // –ù–∞–π—Ç–∏ —á–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
                        if (!role){
                            message.reply(`\`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –†–æ–ª—å ${rolename} –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞.\``)
                            return console.error(`–†–æ–ª—å ${rolename} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`);
                        }else if(!reqchat){
                            message.reply(`\`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –ö–∞–Ω–∞–ª requests-for-roles –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!\``)
                            return console.error(`–ö–∞–Ω–∞–ª requests-for-roles –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!`)
                        }
                        if (message.member.roles.some(r => [rolename].includes(r.name))){
                            return message.react(`üëå`) // –ï—Å–ª–∏ —Ä–æ–ª—å –µ—Å—Ç—å, –ø–æ—Å—Ç–∞–≤–∏—Ç—å –æ–∫–µ–π.
                        }
                        if (sened.has(message.member.displayName)) return message.react(`üïñ`) // –ï—Å–ª–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª - –ø–æ—Å—Ç–∞–≤–∏—Ç—å —á–∞—Å—ã.
                        let nickname = message.member.displayName;
                        const embed = new Discord.RichEmbed()
                        .setTitle("`Discord ¬ª –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–∏–∫ –Ω–µ–π–º–∞.`")
                        .setColor("#483D8B")
                        .addField("–ê–∫–∫–∞—É–Ω—Ç", `\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\` <@${message.author.id}>`, true)
                        .addField("–ù–∏–∫–Ω–µ–π–º", `\`–ù–∏–∫:\` ${nickname}`, true)
                        .addField("–†–æ–ª—å –¥–ª—è –≤—ã–¥–∞—á–∏", `\`–†–æ–ª—å –¥–ª—è –≤—ã–¥–∞—á–∏:\` <@&${role.id}>`)
                        .addField("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –∫–∞–Ω–∞–ª–∞", `<#${message.channel.id}>`)
                        .addField("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤—ã–¥–∞—á–∏", `\`[‚úî] - –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å\`\n` + `\`[‚ùå] - –æ—Ç–∫–∞–∑–∞—Ç—å –≤ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏\`\n` + `\`[D] - —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\``)
                        .setFooter("¬© Support Team | by Kory_McGregor")
                        .setTimestamp();
                        if (message.member.roles.some(r => r.name == 'üèÜ Legendary üèÜ')){
                            embed.addField(`–í–ù–ò–ú–ê–ù–ò–ï!!!`, `\`\`\`diff\n- –û–ë–†–ê–¢–ò–¢–ï –í–ù–ò–ú–ê–ù–ò–ï, –ß–¢–û –î–ê–ù–ù–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –Ø–í–õ–Ø–ï–¢–°–Ø –ù–ï–ñ–ï–õ–ê–¢–ï–õ–¨–ù–´–ú, –≠–¢–û –û–ó–ù–ê–ß–ê–ï–¢ –ß–¢–û –û–ù –ú–û–ñ–ï–¢ –í–ê–° –û–ë–ú–ê–ù–£–¢–¨!!!\`\`\``);	
                        }
                        if (users.length == 1){
                            if (new Date(`${users[0].blacklisted}`).valueOf() != '-30610224000000'){
                                let date = new Date().valueOf() - new Date(`${users[0].blacklisted}`).valueOf();
                                if (+date < 604800000) embed.addField(`–í–Ω–∏–º–∞–Ω–∏–µ! –ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫!`, `\`\`\`diff\n- ${time(date)} –Ω–∞–∑–∞–¥ —É –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª –æ—Ç–º–µ—á–µ–Ω –Ω–∏–∫–Ω–µ–π–º –∫–∞–∫ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π.\n- –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π –µ–≥–æ –Ω–∞ —Ä–æ–ª—å! –î–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç 7 –¥–Ω–µ–π.\`\`\``);
                            }
                            if (new Date(`${users[0].remove_role}`).valueOf() != '-30610224000000'){
                                let date = new Date().valueOf() - new Date(`${users[0].remove_role}`).valueOf();
                                let member = message.guild.members.get(users[0].staff);
                                let staff = ' –æ—Ç ' + member.displayName || ' –æ—Ç ' + member.user.tag || '';
                                if (+date < 259200000) embed.addField(`–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏!`, `\`\`\`diff\n+ ${time(date)} –Ω–∞–∑–∞–¥ —É –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª–∞ —Å–Ω—è—Ç–∞ —Ä–æ–ª—å –ø–æ –∑–∞–ø—Ä–æ—Å—É${staff}.\n+ –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π –µ–≥–æ –Ω–∞ —Ä–æ–ª—å! –î–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç 3-–æ–µ —Å—É—Ç–æ–∫.\`\`\``);
                            }
                        }
                        reqchat.send(embed).then(async msgsen => {
                            await msgsen.react('‚úî')
                            await msgsen.react('‚ùå')
                            await msgsen.react('üá©')
                            await msgsen.pin();
                        })
                        sened.add(message.member.displayName); // –ü–æ–º–µ—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–π –Ω–∏–∫, —á—Ç–æ –æ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞–ø—Ä–æ—Å.
                        return message.react(`üì®`);
                    }
                }
            });
        });
    }
}